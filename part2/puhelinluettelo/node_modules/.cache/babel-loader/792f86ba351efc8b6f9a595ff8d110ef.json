{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Power User\\\\documents\\\\Full-Stack-Mooc-2020\\\\part2\\\\puhelinluettelo\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport AddPerson from \"./components/AddPerson\";\nimport ShowPersons from \"./components/Persons\";\nimport FilterPersons from \"./components/Filter\";\nimport Notification from \"./components/Notification\";\nimport Error from \"./components/Notification\";\nimport personServices from './services/persons';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [notificationMessage, setNotificationMessage] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  useEffect(() => {\n    personServices.getAll().then(initialPersons => {\n      setPersons(initialPersons);\n    });\n  }, []);\n\n  const addPerson = event => {\n    event.preventDefault();\n    const person = {\n      name: newName,\n      number: newNumber\n    }; // Check if person's name exists in persons\n\n    if (persons.map(person => person.name).includes(newName)) {\n      if (window.confirm(`Do you really want to replace ${person.name} with new number?`)) {\n        let old_person = persons.find(person => person.name === newName);\n        personServices.update(old_person.id, person).then(returnedPerson => {\n          setPersons(persons.map(person => person.id === old_person.id ? returnedPerson : person));\n          setNewName(\"\");\n          setNewNumber(\"\");\n          setNotificationMessage(`${old_person.name} was updated`);\n          setTimeout(() => {\n            setNotificationMessage(null);\n          }, 5000);\n        }).catch(error => {\n          setErrorMessage(`${old_person.name} was already removed from server`);\n          setTimeout(() => {\n            setErrorMessage(null);\n          }, 5000);\n        });\n      }\n    } else {\n      personServices.create(person).then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson));\n        setNewName(\"\");\n        setNewNumber(\"\");\n        setNotificationMessage(`${returnedPerson.name} was created`);\n        setTimeout(() => {\n          setNotificationMessage(null);\n        }, 5000);\n      });\n    }\n  };\n\n  function arrayRemove(arr, value) {\n    return arr.filter(function (ele) {\n      return ele !== value;\n    });\n  }\n\n  const removePerson = person => {\n    if (window.confirm(`Do you really want to delete ${person.name}`)) {\n      personServices.remove(person.id).then(returnValue => {\n        setPersons(arrayRemove(persons, person));\n        setNotificationMessage(`${person.name} was deleted`);\n        setTimeout(() => {\n          setNotificationMessage(null);\n        }, 5000);\n      }).catch(err => {\n        setErrorMessage(`${person.name} was already removed from server`);\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n      });\n    }\n  };\n\n  const handleNameChange = event => {\n    console.log(event.target.value);\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    console.log(event.target.value);\n    setNewNumber(event.target.value);\n  };\n\n  const handleInputChange = event => {\n    console.log(event.target.value);\n    setSearchInput(event.target.value);\n  };\n\n  const personsToShow = persons.filter(person => person.name.toLowerCase().includes(searchInput.toLowerCase()));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, \"Phonebook\"), /*#__PURE__*/React.createElement(Notification, {\n    message: notificationMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Notification, {\n    message: errorMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, \"Search with name:\", /*#__PURE__*/React.createElement(FilterPersons, {\n    searchInput: searchInput,\n    handleInputChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, \"Add a new\"), /*#__PURE__*/React.createElement(AddPerson, {\n    newNumber: newNumber,\n    newName: newName,\n    handleNameChange: handleNameChange,\n    handleNumberChange: handleNumberChange,\n    addPerson: addPerson,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }, \"Numbers\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ShowPersons, {\n    personsToShow: personsToShow,\n    removePerson: removePerson,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Power User/documents/Full-Stack-Mooc-2020/part2/puhelinluettelo/src/App.js"],"names":["React","useState","useEffect","AddPerson","ShowPersons","FilterPersons","Notification","Error","personServices","App","persons","setPersons","newName","setNewName","newNumber","setNewNumber","searchInput","setSearchInput","notificationMessage","setNotificationMessage","errorMessage","setErrorMessage","getAll","then","initialPersons","addPerson","event","preventDefault","person","name","number","map","includes","window","confirm","old_person","find","update","id","returnedPerson","setTimeout","catch","error","create","concat","arrayRemove","arr","value","filter","ele","removePerson","remove","returnValue","err","handleNameChange","console","log","target","handleNumberChange","handleInputChange","personsToShow","toLowerCase"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport AddPerson from \"./components/AddPerson\"\nimport ShowPersons from \"./components/Persons\"\nimport FilterPersons from \"./components/Filter\"\nimport Notification from \"./components/Notification\"\nimport Error from \"./components/Notification\"\nimport personServices from './services/persons'\n\nconst App = () => {\n  const [persons, setPersons] = useState([]) \n  const [newName, setNewName] = useState(\"\")\n  const [newNumber, setNewNumber] = useState(\"\")\n  const [searchInput, setSearchInput] = useState(\"\")\n  const [notificationMessage, setNotificationMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n  \n\n  useEffect(() => {\n    personServices\n      .getAll()\n        .then(initialPersons => {\n        setPersons(initialPersons)\n        })\n\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const person = {\n      name: newName, number: newNumber\n    }\n    \n    // Check if person's name exists in persons\n    if (persons.map(person=>\n      person.name).includes(newName)){\n        if (window.confirm(`Do you really want to replace ${person.name} with new number?`)) { \n          let old_person = persons.find(person=> person.name === newName)\n          personServices\n          .update(old_person.id, person)\n          .then(returnedPerson => {\n            setPersons(persons.map(person => (person.id === old_person.id) ? returnedPerson : person))\n            setNewName(\"\")\n            setNewNumber(\"\")\n            setNotificationMessage(\n              `${old_person.name} was updated`\n            )\n            setTimeout(() => {\n              setNotificationMessage(null)\n            }, 5000)\n          })\n          .catch(error => {\n            setErrorMessage(\n              `${old_person.name} was already removed from server`\n            )\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 5000)\n          })\n      } \n      }\n\n    else {\n      personServices\n      .create(person)\n      .then(returnedPerson => {\n      setPersons(persons.concat(returnedPerson))\n      setNewName(\"\")\n      setNewNumber(\"\")\n      setNotificationMessage(\n        `${returnedPerson.name} was created`\n      )\n      setTimeout(() => {\n        setNotificationMessage  (null)\n      }, 5000)\n    })\n    } \n  }\n\n\n  function arrayRemove(arr, value) { \n    \n    return arr.filter(function(ele){ \n        return ele !== value; \n    });\n}\n\n  const removePerson = (person) => {\n  if (window.confirm(`Do you really want to delete ${person.name}`)) { \n      personServices. \n      remove(person.id)\n      .then(returnValue => {\n        setPersons(arrayRemove(persons, person))\n        setNotificationMessage(\n          `${person.name} was deleted`\n        )\n        setTimeout(() => {\n          setNotificationMessage  (null)\n        }, 5000)\n      })\n      .catch(err => {\n        setErrorMessage(\n          `${person.name} was already removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n    }\n}\n\n  const handleNameChange = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n  \n  const handleNumberChange = (event) => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n  const handleInputChange = (event) => {\n    console.log(event.target.value)\n    setSearchInput(event.target.value)\n  }\n\n  const personsToShow = \n    persons.filter(person=>person.name.toLowerCase().includes(searchInput.toLowerCase()))\n  \n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notificationMessage}/>\n      <Notification message={errorMessage}/>\n        <div>\n        Search with name: \n        <FilterPersons\n        searchInput = {searchInput}\n        handleInputChange = {handleInputChange}/>\n          <h2>Add a new</h2>\n          <AddPerson \n          newNumber = {newNumber} \n          newName = {newName}\n          handleNameChange = {handleNameChange}\n          handleNumberChange = {handleNumberChange}\n          addPerson = {addPerson}\n          />\n        </div>\n      <h2>Numbers</h2>\n        <ul>\n        <ShowPersons\n        personsToShow = {personsToShow}\n        removePerson = {removePerson}\n        />\n        </ul>\n    </div>\n  )\n\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}