{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Power User\\\\documents\\\\full-stack-mooc-2020\\\\part2\\\\puhelinluettelo\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport DisplayPerson from './components/Persons';\nimport FilterPersons from './components/Filter';\nimport AddPerson from './components/AddPerson';\nimport axios from 'axios';\nimport personService from './services/persons';\nconst baseUrl = 'http://localhost:3001/notes';\n\nconst App = () => {\n  const [persons, setPersons] = useState(['']);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [filter, setNewFilter] = useState('');\n\n  const getPersons = async () => {\n    const response = await axios.get('http://localhost:3001/persons');\n    setPersons(response.data);\n  };\n\n  useEffect(() => {\n    getPersons();\n  }, []);\n\n  const showMessage = (message, error) => {\n    setNotification(message);\n    setError(error);\n    setTimeout(() => {\n      setNotification(null);\n      setError(null);\n    }, 5000);\n  };\n\n  const addPerson = event => {\n    event.preventDefault();\n    const person = {\n      name: newName,\n      number: newNumber\n    };\n    const find_person = persons.find(person => person.name.toLowerCase() === newName.toLowerCase());\n\n    if (find_person) {\n      alert(`${newName} is already added to phonebook. Should the name be replaced?`);\n      personService.update(find_person.id, person).then(response => {\n        setPersons(persons.filter(p => p.name !== person.name).concat(response));\n        setNewName('');\n        setNewNumber('');\n        showMessage(`Päivitettiin ${person.name}`);\n      }).catch(error => {\n        showMessage(error.response.data.error.message, true);\n      });\n    } else {\n      personService.create(person).then(response => {\n        setPersons(persons.concat(person));\n        setNewName('');\n        setNewNumber('');\n        showMessage(`${person.name} was added to yours phonenook`);\n      }).catch(error => {\n        showMessage(error.response.data.error.message, true);\n      });\n    }\n  };\n\n  const filteredPersons = filter ? persons.filter(person => {\n    return person.name.toLowerCase().includes(filter.toLowerCase());\n  }) : persons;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, \"Phonebook\"), /*#__PURE__*/React.createElement(FilterPersons, {\n    setFilter: setNewFilter,\n    filter: filter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, \"Add new contact\"), /*#__PURE__*/React.createElement(AddPerson, {\n    addPerson: addPerson,\n    setNewName: setNewName,\n    setNewNumber: setNewNumber,\n    newName: newName,\n    newNumber: newNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, \"Contacts\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, filteredPersons.map((person, i) => /*#__PURE__*/React.createElement(DisplayPerson, {\n    key: i,\n    person: person,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 8\n    }\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Power User/documents/full-stack-mooc-2020/part2/puhelinluettelo/src/App.js"],"names":["React","useState","useEffect","DisplayPerson","FilterPersons","AddPerson","axios","personService","baseUrl","App","persons","setPersons","newName","setNewName","newNumber","setNewNumber","filter","setNewFilter","getPersons","response","get","data","showMessage","message","error","setNotification","setError","setTimeout","addPerson","event","preventDefault","person","name","number","find_person","find","toLowerCase","alert","update","id","then","p","concat","catch","create","filteredPersons","includes","map","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport DisplayPerson from './components/Persons'\nimport FilterPersons from './components/Filter'\nimport AddPerson from './components/AddPerson'\nimport axios from 'axios'\nimport personService from './services/persons'\nconst baseUrl = 'http://localhost:3001/notes'\n\n\n\nconst App = () => {\n\n  const [persons, setPersons] = useState([''])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setNewFilter  ] = useState('')\n\n  const getPersons = async () => {\n    const response = await axios.get('http://localhost:3001/persons')\n    setPersons(response.data)\n  }\n\n  useEffect(() => {\n    getPersons()\n  }, [])\n\n  const showMessage = (message, error) => {\n    setNotification(message)\n    setError(error)\n\n    setTimeout(() => {\n      setNotification(null)\n      setError(null)\n    }, 5000)\n  }\n  \n  const addPerson = event => {\n    event.preventDefault()\n\n    const person = {\n        name: newName,\n        number : newNumber\n    }\n\n    const find_person = persons.find(person => person.name.toLowerCase() === newName.toLowerCase())\n    \n    if (find_person) {\n      alert(`${newName} is already added to phonebook. Should the name be replaced?`)\n      personService\n        .update(find_person.id, person)\n        .then(response => {\n          setPersons(persons\n            .filter(p => p.name !== person.name)\n            .concat(response)\n          )\n          setNewName('')\n          setNewNumber('')\n          showMessage(`Päivitettiin ${person.name}`)\n        })\n        .catch(error => {\n          showMessage(error.response.data.error.message, true)\n        })\n    }\n    else {\n      personService\n        .create(person)\n        .then(response => {\n          setPersons(persons.concat(person))\n          setNewName('')\n          setNewNumber('')\n          showMessage(`${person.name} was added to yours phonenook`)\n        })\n        .catch(error => {\n          showMessage(error.response.data.error.message, true)\n        })\n    }\n  }\n\n  const filteredPersons = filter\n    ? persons.filter(person => { \n      return person.name.toLowerCase().includes(filter.toLowerCase())\n    })\n    : persons\n\n\n  \n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <FilterPersons setFilter = {setNewFilter} filter = {filter}/>\n      <h2>Add new contact</h2>\n      <AddPerson \n      addPerson = {addPerson}\n      setNewName = {setNewName}\n      setNewNumber = {setNewNumber}\n      newName = {newName}\n      newNumber = {newNumber}\n      />  \n      <h2>Contacts</h2>\n      <ul>\n      {filteredPersons.map((person, i) =>\n       <DisplayPerson key = {i} person = {person} />\n      )}\n      </ul>\n    </div>\n  )\n\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}