{"version":3,"sources":["components/AddPerson.js","components/Persons.js","components/Filter.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["AddPerson","props","onSubmit","addPerson","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","type","ShowPersons","personsToShow","map","person","key","name","number","onClick","removePerson","FilterPersons","searchInput","handleInputChange","message","className","baseUrl","axios","get","then","response","data","post","id","delete","put","App","useState","persons","setPersons","setNewName","setNewNumber","setSearchInput","notificationMessage","setNotificationMessage","errorMessage","setErrorMessage","useEffect","personServices","initialPersons","filter","toLowerCase","includes","Filter","event","console","log","target","preventDefault","window","confirm","old_person","find","returnedPerson","setTimeout","catch","error","concat","returnValue","ele","err","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.436bd4fc.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst AddPerson = (props) => {\r\n    return (\r\n        <form onSubmit = {props.addPerson}>\r\n          name:\r\n        <input \r\n          value = {props.newName} \r\n          onChange={props.handleNameChange}\r\n        />\r\n        <div>\r\n          number:\r\n        <input\r\n          value = {props.newNumber}\r\n          onChange = {props.handleNumberChange}\r\n         />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    )\r\n}\r\n\r\nexport default AddPerson\r\n\r\n","import React from 'react'\r\n\r\nconst ShowPersons = (props) => {\r\n    return (\r\n    props.personsToShow.map(person =>\r\n      <li key = {person.name}> {person.name} {person.number} \r\n        <button onClick={ () => props.removePerson(person) }>\r\n            delete\r\n        </button>\r\n      </li>\r\n    )\r\n)\r\n}\r\n    \r\nexport default ShowPersons","import React from 'react'\r\n\r\nconst FilterPersons = (props) => {\r\n    return ( \r\n      <input value = {props.searchInput}\r\n      onChange = {props.handleInputChange}/>\r\n    )\r\n}\r\n\r\nexport default FilterPersons","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className=\"notification\">\r\n        {message}\r\n      </div>\r\n    )\r\n}\r\n\r\nconst Error = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default {Error, Notification}  ","import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3001/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = person => {\r\n  const request = axios.post(baseUrl, person)\r\n  return request.then(response => response.data)\r\n}\r\nconst remove = id => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, person) => {\r\n  const req = axios.put(`${baseUrl}/${id}`, person)\r\n  return req.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, remove, update}","import React, { useState, useEffect } from 'react'\nimport AddPerson from \"./components/AddPerson\"\nimport ShowPersons from \"./components/Persons\"\nimport FilterPersons from \"./components/Filter\"\nimport messages from \"./components/Notification\"\nimport personServices from './services/persons'\n\nconst App = () => {\n  const [persons, setPersons] = useState([]) \n  const [newName, setNewName] = useState(\"\")\n  const [newNumber, setNewNumber] = useState(\"\")\n  const [searchInput, setSearchInput] = useState(\"\")\n  const [notificationMessage, setNotificationMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n  \n\n  useEffect(() => {\n    personServices\n      .getAll()\n        .then(initialPersons => {\n        setPersons(initialPersons)\n        })\n\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const person = {\n      name: newName, number: newNumber\n    }\n    \n    // Check if person's name exists in persons\n    if (persons.map(person=>\n      person.name).includes(newName)){\n        if (window.confirm(`Do you really want to replace ${person.name} with new number?`)) { \n          let old_person = persons.find(person=> person.name === newName)\n          personServices\n          .update(old_person.id, person)\n          .then(returnedPerson => {\n            setPersons(persons.map(person => (person.id === old_person.id) ? returnedPerson : person))\n            setNewName(\"\")\n            setNewNumber(\"\")\n            setNotificationMessage(\n              `${old_person.name} was updated`\n            )\n            setTimeout(() => {\n              setNotificationMessage(null)\n            }, 5000)\n          })\n          .catch(error => {\n            setErrorMessage(\n              `${old_person.name} was already removed from server`\n            )\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 5000)\n          })\n      } \n      }\n\n    else {\n      personServices\n      .create(person)\n      .then(returnedPerson => {\n      setPersons(persons.concat(returnedPerson))\n      setNewName(\"\")\n      setNewNumber(\"\")\n      setNotificationMessage(\n        `${returnedPerson.name} was created`\n      )\n      setTimeout(() => {\n        setNotificationMessage  (null)\n      }, 5000)\n    })\n    } \n  }\n\n\n  function arrayRemove(arr, value) { \n    \n    return arr.filter(function(ele){ \n        return ele !== value; \n    });\n}\n\n  const removePerson = (person) => {\n  if (window.confirm(`Do you really want to delete ${person.name}`)) { \n      personServices. \n      remove(person.id)\n      .then(returnValue => {\n        setPersons(arrayRemove(persons, person))\n        setNotificationMessage(\n          `${person.name} was deleted`\n        )\n        setTimeout(() => {\n          setNotificationMessage  (null)\n        }, 5000)\n      })\n      .catch(err => {\n        setErrorMessage(\n          `${person.name} was already removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n    }\n}\n\n  const handleNameChange = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n  \n  const handleNumberChange = (event) => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n  const handleInputChange = (event) => {\n    console.log(event.target.value)\n    setSearchInput(event.target.value)\n  }\n\n  const personsToShow = \n    persons.filter(person=>person.name.toLowerCase().includes(searchInput.toLowerCase()))\n  \n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <messages.Notification message={notificationMessage}/>\n      <messages.Error message={errorMessage}/>\n        <div>\n        Search with name: \n        <FilterPersons\n        searchInput = {searchInput}\n        handleInputChange = {handleInputChange}/>\n          <h2>Add a new</h2>\n          <AddPerson \n          newNumber = {newNumber} \n          newName = {newName}\n          handleNameChange = {handleNameChange}\n          handleNumberChange = {handleNumberChange}\n          addPerson = {addPerson}\n          />\n        </div>\n      <h2>Numbers</h2>\n        <ul>\n        <ShowPersons\n        personsToShow = {personsToShow}\n        removePerson = {removePerson}\n        />\n        </ul>\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n "],"sourceRoot":""}