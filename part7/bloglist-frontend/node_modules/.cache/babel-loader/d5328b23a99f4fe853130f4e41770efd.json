{"ast":null,"code":"import loginService from '../services/login';\nimport blogService from '../services/blogs';\nimport { setNotification } from './notificationReducer';\n\nconst notificationReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(action.type, \"notification action type\");\n\n  switch (action.type) {\n    case \"LOGIN\":\n      window.localStorage.setItem('loggedUser', JSON.stringify(action.user));\n      blogService.setToken(action.user.token);\n      return action.user;\n\n    case \"LOGOUT\":\n      return null;\n\n    case \"SET_USER\":\n      return action.user;\n\n    default:\n      return state;\n  }\n};\n\nexport const loginUser = (username, password) => {\n  return async dispatch => {\n    console.log(username, password);\n\n    try {\n      const user = await loginService({\n        username,\n        password\n      });\n      dispatch({\n        type: \"LOGIN\",\n        user\n      });\n      dispatch(setNotification(user.username + ' logged in', 5));\n    } catch (exception) {\n      console.log(exception);\n      dispatch(setNotification('wrong credentials', 5));\n    }\n  };\n};\nexport const logoutUser = () => {\n  return {\n    type: 'LOGOUT'\n  };\n};\nexport const setUser = user => {\n  return async dispatch => {\n    blogService.setToken(user.token);\n    dispatch({\n      type: 'SET_USER',\n      user\n    });\n  };\n};\nexport default notificationReducer;","map":{"version":3,"sources":["C:/Users/Power User/OneDrive - Aalto University/Documents/Full-Stack-Mooc/full-stack-mooc-2020/part7/bloglist-frontend/src/reducers/userReducer.js"],"names":["loginService","blogService","setNotification","notificationReducer","state","action","console","log","type","window","localStorage","setItem","JSON","stringify","user","setToken","token","loginUser","username","password","dispatch","exception","logoutUser","setUser"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,mBAAzB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,SAASC,eAAT,QAAgC,uBAAhC;;AAEA,MAAMC,mBAAmB,GAAG,YAA0B;AAAA,MAAzBC,KAAyB,uEAAjB,IAAiB;AAAA,MAAXC,MAAW;AAClDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAnB,EAAyB,0BAAzB;;AACA,UAAQH,MAAM,CAACG,IAAf;AACE,SAAK,OAAL;AACEC,MAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,YAA5B,EAA0CC,IAAI,CAACC,SAAL,CAAeR,MAAM,CAACS,IAAtB,CAA1C;AACAb,MAAAA,WAAW,CAACc,QAAZ,CAAqBV,MAAM,CAACS,IAAP,CAAYE,KAAjC;AACA,aAAOX,MAAM,CAACS,IAAd;;AACF,SAAK,QAAL;AACI,aAAO,IAAP;;AACJ,SAAK,UAAL;AACE,aAAOT,MAAM,CAACS,IAAd;;AACF;AAAS,aAAOV,KAAP;AATX;AAWD,CAbH;;AAgBA,OAAO,MAAMa,SAAS,GAAG,CAAEC,QAAF,EAAYC,QAAZ,KAA0B;AAC/C,SAAO,MAAMC,QAAN,IAAkB;AACrBd,IAAAA,OAAO,CAACC,GAAR,CAAYW,QAAZ,EAAsBC,QAAtB;;AACA,QAAI;AACA,YAAML,IAAI,GAAG,MAAMd,YAAY,CAAC;AAC7BkB,QAAAA,QAD6B;AACnBC,QAAAA;AADmB,OAAD,CAA/B;AAGAC,MAAAA,QAAQ,CAAC;AACLZ,QAAAA,IAAI,EAAE,OADD;AAELM,QAAAA;AAFK,OAAD,CAAR;AAIAM,MAAAA,QAAQ,CAAClB,eAAe,CAACY,IAAI,CAACI,QAAL,GAAgB,YAAjB,EAA+B,CAA/B,CAAhB,CAAR;AACH,KATD,CAUA,OAAOG,SAAP,EAAkB;AACdf,MAAAA,OAAO,CAACC,GAAR,CAAYc,SAAZ;AACAD,MAAAA,QAAQ,CAAClB,eAAe,CAAC,mBAAD,EAAsB,CAAtB,CAAhB,CAAR;AACH;AACJ,GAhBD;AAiBH,CAlBM;AAoBP,OAAO,MAAMoB,UAAU,GAAG,MAAM;AAC5B,SAAO;AACHd,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMe,OAAO,GAAIT,IAAD,IAAU;AAC7B,SAAO,MAAMM,QAAN,IAAkB;AACrBnB,IAAAA,WAAW,CAACc,QAAZ,CAAqBD,IAAI,CAACE,KAA1B;AACAI,IAAAA,QAAQ,CAAC;AACLZ,MAAAA,IAAI,EAAE,UADD;AAELM,MAAAA;AAFK,KAAD,CAAR;AAIH,GAND;AAOH,CARM;AAWP,eAAeX,mBAAf","sourcesContent":["import loginService from '../services/login'\r\nimport blogService from '../services/blogs'\r\nimport { setNotification } from './notificationReducer'\r\n\r\nconst notificationReducer = (state = null, action) => {  \r\n    console.log(action.type, \"notification action type\")\r\n    switch (action.type) {      \r\n      case \"LOGIN\":\r\n        window.localStorage.setItem('loggedUser', JSON.stringify(action.user))\r\n        blogService.setToken(action.user.token)\r\n        return action.user\r\n      case \"LOGOUT\":\r\n          return null\r\n      case \"SET_USER\":\r\n        return action.user\r\n      default: return state\r\n    }\r\n  }\r\n\r\n  \r\nexport const loginUser = ( username, password ) => {\r\n    return async dispatch => {\r\n        console.log(username, password)\r\n        try {\r\n            const user = await loginService({\r\n               username, password\r\n            })\r\n            dispatch({\r\n                type: \"LOGIN\",\r\n                user\r\n            })\r\n            dispatch(setNotification(user.username + ' logged in', 5))\r\n        } \r\n        catch (exception) {\r\n            console.log(exception)\r\n            dispatch(setNotification('wrong credentials', 5))\r\n        }\r\n    }\r\n}\r\n\r\nexport const logoutUser = () => {\r\n    return {\r\n        type: 'LOGOUT'\r\n    }\r\n}\r\n\r\nexport const setUser = (user) => {\r\n    return async dispatch => {\r\n        blogService.setToken(user.token);\r\n        dispatch({\r\n            type: 'SET_USER',\r\n            user\r\n        });\r\n    };\r\n}\r\n\r\n\r\nexport default notificationReducer"]},"metadata":{},"sourceType":"module"}