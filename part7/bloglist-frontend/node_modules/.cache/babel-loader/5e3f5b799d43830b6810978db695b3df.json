{"ast":null,"code":"import blogService from '../services/blogs';\n\nconst blogReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log('state now: ', state);\n  console.log('action', action);\n\n  switch (action.type) {\n    // case 'LIKE':\n    //   const id = action.data.id\n    //   const anecdoteToVote = state.find(n => n.id === id)\n    //   const votedAnecdote = { \n    //     ...anecdoteToVote, \n    //     votes: anecdoteToVote.votes + 1 \n    //   }\n    //   return state.map(note =>\n    //     note.id !== id ? note : votedAnecdote \n    //   )\n    case \"NEW_BLOG\":\n      const blogToAdd = action.data;\n      return [...state, blogToAdd];\n\n    case \"INIT\":\n      return action.data;\n\n    default:\n      return state;\n  }\n}; // export const voteAnecdote = (anecdote) => {\n//   return async dispatch => {\n//     const votedAnecdote = {...anecdote, votes: anecdote.votes+1}\n//     const response  = await anecdoteService.vote(votedAnecdote)\n//     const id = response.id\n//     dispatch({\n//       type: \"VOTE\", \n//       data: { id } \n//     })\n//   }\n// }\n\n\nexport const createBlog = content => {\n  return async dispatch => {\n    const blogs = await blogService.create(content);\n    console.log(blog);\n    dispatch({\n      type: 'NEW_ANECDOTE',\n      data: blog\n    });\n  };\n};\nexport const initializeBlogs = () => {\n  return async dispatch => {\n    const blogs = await blogService.getAll();\n    dispatch({\n      type: 'INIT',\n      data: blogs\n    });\n  };\n};\nexport default blogReducer;","map":{"version":3,"sources":["C:/Users/Power User/OneDrive - Aalto University/Documents/Full-Stack-Mooc/Full-Stack-Mooc-2020/part7/bloglist-frontend/src/reducers/blogReducer.js"],"names":["blogService","blogReducer","state","action","console","log","type","blogToAdd","data","createBlog","content","dispatch","blogs","create","blog","initializeBlogs","getAll"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,mBAAxB;;AAGA,MAAMC,WAAW,GAAG,YAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;AAC1CC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BH,KAA3B;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,MAAtB;;AAEA,UAAQA,MAAM,CAACG,IAAf;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAK,UAAL;AACE,YAAMC,SAAS,GAAGJ,MAAM,CAACK,IAAzB;AACA,aAAO,CAAC,GAAGN,KAAJ,EAAWK,SAAX,CAAP;;AACF,SAAK,MAAL;AACI,aAAOJ,MAAM,CAACK,IAAd;;AACJ;AAAS,aAAON,KAAP;AAhBX;AAkBD,CAtBD,C,CAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,MAAMO,UAAU,GAAIC,OAAD,IAAa;AACrC,SAAO,MAAMC,QAAN,IAAkB;AACvB,UAAMC,KAAK,GAAG,MAAMZ,WAAW,CAACa,MAAZ,CAAmBH,OAAnB,CAApB;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYS,IAAZ;AACEH,IAAAA,QAAQ,CAAC;AACPL,MAAAA,IAAI,EAAE,cADC;AAEPE,MAAAA,IAAI,EAAEM;AAFC,KAAD,CAAR;AAIH,GAPD;AAQD,CATM;AAWP,OAAO,MAAMC,eAAe,GAAG,MAAM;AACnC,SAAO,MAAMJ,QAAN,IAAkB;AACvB,UAAMC,KAAK,GAAG,MAAMZ,WAAW,CAACgB,MAAZ,EAApB;AACEL,IAAAA,QAAQ,CAAC;AACPL,MAAAA,IAAI,EAAE,MADC;AAEPE,MAAAA,IAAI,EAAEI;AAFC,KAAD,CAAR;AAIH,GAND;AAOD,CARM;AAWP,eAAeX,WAAf","sourcesContent":["import blogService from '../services/blogs'\r\n\r\n\r\nconst blogReducer = (state = [], action) => {\r\n  console.log('state now: ', state)\r\n  console.log('action', action)\r\n\r\n  switch (action.type) {\r\n    // case 'LIKE':\r\n    //   const id = action.data.id\r\n    //   const anecdoteToVote = state.find(n => n.id === id)\r\n    //   const votedAnecdote = { \r\n    //     ...anecdoteToVote, \r\n    //     votes: anecdoteToVote.votes + 1 \r\n    //   }\r\n    //   return state.map(note =>\r\n    //     note.id !== id ? note : votedAnecdote \r\n    //   )\r\n    case \"NEW_BLOG\":\r\n      const blogToAdd = action.data\r\n      return [...state, blogToAdd]\r\n    case \"INIT\":\r\n        return action.data\r\n    default: return state\r\n  }\r\n}\r\n\r\n// export const voteAnecdote = (anecdote) => {\r\n//   return async dispatch => {\r\n//     const votedAnecdote = {...anecdote, votes: anecdote.votes+1}\r\n//     const response  = await anecdoteService.vote(votedAnecdote)\r\n//     const id = response.id\r\n//     dispatch({\r\n//       type: \"VOTE\", \r\n//       data: { id } \r\n//     })\r\n//   }\r\n// }\r\n\r\nexport const createBlog = (content) => {\r\n  return async dispatch => { \r\n    const blogs = await blogService.create(content)\r\n    console.log(blog)\r\n      dispatch({\r\n        type: 'NEW_ANECDOTE',\r\n        data: blog,\r\n    })\r\n  }\r\n}\r\n\r\nexport const initializeBlogs = () => {\r\n  return async dispatch => { \r\n    const blogs = await blogService.getAll()\r\n      dispatch({\r\n        type: 'INIT',\r\n        data: blogs,\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport default blogReducer"]},"metadata":{},"sourceType":"module"}