{"ast":null,"code":"import blogService from '../services/blogs';\n\nconst blogReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log('state now: ', state);\n  console.log('action', action);\n\n  switch (action.type) {\n    case 'LIKE':\n      const id = action.data.id;\n      const blogToVote = state.find(n => n.id === id);\n      const votedBlog = { ...blogToVote,\n        votes: blogToVote.votes + 1\n      };\n      return state.map(blog => blog.id !== id ? blog : votedBlog);\n\n    case \"NEW_BLOG\":\n      const blogToAdd = action.data;\n      return [...state, blogToAdd];\n\n    case \"INIT\":\n      return action.data;\n\n    default:\n      return state;\n  }\n};\n\nexport const updateBlog = blog => {\n  return async dispatch => {\n    const votedBlog = { ...blog,\n      votes: blog.votes + 1\n    };\n    const response = await blogService.updateBlog(blog.id, votedBlog);\n    const id = response.id;\n    dispatch({\n      type: \"LIKE\",\n      data: {\n        id\n      }\n    });\n  };\n};\nexport const createBlog = content => {\n  return async dispatch => {\n    const blog = await blogService.create(content);\n    console.log(blog);\n    dispatch({\n      type: 'NEW_ANECDOTE',\n      data: blog\n    });\n  };\n};\nexport const initializeBlogs = () => {\n  return async dispatch => {\n    const blogs = await blogService.getAll();\n    dispatch({\n      type: 'INIT',\n      data: blogs\n    });\n  };\n};\nexport default blogReducer;","map":{"version":3,"sources":["C:/Users/Power User/OneDrive - Aalto University/Documents/Full-Stack-Mooc/Full-Stack-Mooc-2020/part7/bloglist-frontend/src/reducers/blogReducer.js"],"names":["blogService","blogReducer","state","action","console","log","type","id","data","blogToVote","find","n","votedBlog","votes","map","blog","blogToAdd","updateBlog","dispatch","response","createBlog","content","create","initializeBlogs","blogs","getAll"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,mBAAxB;;AAGA,MAAMC,WAAW,GAAG,YAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;AAC1CC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BH,KAA3B;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,MAAtB;;AAEA,UAAQA,MAAM,CAACG,IAAf;AACE,SAAK,MAAL;AACE,YAAMC,EAAE,GAAGJ,MAAM,CAACK,IAAP,CAAYD,EAAvB;AACA,YAAME,UAAU,GAAGP,KAAK,CAACQ,IAAN,CAAWC,CAAC,IAAIA,CAAC,CAACJ,EAAF,KAASA,EAAzB,CAAnB;AACA,YAAMK,SAAS,GAAG,EAChB,GAAGH,UADa;AAEhBI,QAAAA,KAAK,EAAEJ,UAAU,CAACI,KAAX,GAAmB;AAFV,OAAlB;AAKA,aAAOX,KAAK,CAACY,GAAN,CAAUC,IAAI,IACnBA,IAAI,CAACR,EAAL,KAAYA,EAAZ,GAAiBQ,IAAjB,GAAwBH,SADnB,CAAP;;AAGF,SAAK,UAAL;AACE,YAAMI,SAAS,GAAGb,MAAM,CAACK,IAAzB;AACA,aAAO,CAAC,GAAGN,KAAJ,EAAWc,SAAX,CAAP;;AACF,SAAK,MAAL;AACI,aAAOb,MAAM,CAACK,IAAd;;AACJ;AAAS,aAAON,KAAP;AAjBX;AAmBD,CAvBD;;AAyBA,OAAO,MAAMe,UAAU,GAAIF,IAAD,IAAU;AAClC,SAAO,MAAMG,QAAN,IAAkB;AACvB,UAAMN,SAAS,GAAG,EAAC,GAAGG,IAAJ;AAAUF,MAAAA,KAAK,EAAEE,IAAI,CAACF,KAAL,GAAW;AAA5B,KAAlB;AACA,UAAMM,QAAQ,GAAI,MAAMnB,WAAW,CAACiB,UAAZ,CAAuBF,IAAI,CAACR,EAA5B,EAAgCK,SAAhC,CAAxB;AACA,UAAML,EAAE,GAAGY,QAAQ,CAACZ,EAApB;AACAW,IAAAA,QAAQ,CAAC;AACPZ,MAAAA,IAAI,EAAE,MADC;AAEPE,MAAAA,IAAI,EAAE;AAAED,QAAAA;AAAF;AAFC,KAAD,CAAR;AAID,GARD;AASD,CAVM;AAYP,OAAO,MAAMa,UAAU,GAAIC,OAAD,IAAa;AACrC,SAAO,MAAMH,QAAN,IAAkB;AACvB,UAAMH,IAAI,GAAG,MAAMf,WAAW,CAACsB,MAAZ,CAAmBD,OAAnB,CAAnB;AACAjB,IAAAA,OAAO,CAACC,GAAR,CAAYU,IAAZ;AACEG,IAAAA,QAAQ,CAAC;AACPZ,MAAAA,IAAI,EAAE,cADC;AAEPE,MAAAA,IAAI,EAAEO;AAFC,KAAD,CAAR;AAIH,GAPD;AAQD,CATM;AAWP,OAAO,MAAMQ,eAAe,GAAG,MAAM;AACnC,SAAO,MAAML,QAAN,IAAkB;AACvB,UAAMM,KAAK,GAAG,MAAMxB,WAAW,CAACyB,MAAZ,EAApB;AACEP,IAAAA,QAAQ,CAAC;AACPZ,MAAAA,IAAI,EAAE,MADC;AAEPE,MAAAA,IAAI,EAAEgB;AAFC,KAAD,CAAR;AAIH,GAND;AAOD,CARM;AAWP,eAAevB,WAAf","sourcesContent":["import blogService from '../services/blogs'\r\n\r\n\r\nconst blogReducer = (state = [], action) => {\r\n  console.log('state now: ', state)\r\n  console.log('action', action)\r\n\r\n  switch (action.type) {\r\n    case 'LIKE':\r\n      const id = action.data.id\r\n      const blogToVote = state.find(n => n.id === id)\r\n      const votedBlog = { \r\n        ...blogToVote, \r\n        votes: blogToVote.votes + 1 \r\n      }\r\n\r\n      return state.map(blog =>\r\n        blog.id !== id ? blog : votedBlog \r\n      )\r\n    case \"NEW_BLOG\":\r\n      const blogToAdd = action.data\r\n      return [...state, blogToAdd]\r\n    case \"INIT\":\r\n        return action.data\r\n    default: return state\r\n  }\r\n}\r\n\r\nexport const updateBlog = (blog) => {\r\n  return async dispatch => {\r\n    const votedBlog = {...blog, votes: blog.votes+1}\r\n    const response  = await blogService.updateBlog(blog.id, votedBlog)\r\n    const id = response.id\r\n    dispatch({\r\n      type: \"LIKE\", \r\n      data: { id } \r\n    })\r\n  }\r\n}\r\n\r\nexport const createBlog = (content) => {\r\n  return async dispatch => { \r\n    const blog = await blogService.create(content)\r\n    console.log(blog)\r\n      dispatch({\r\n        type: 'NEW_ANECDOTE',\r\n        data: blog,\r\n    })\r\n  }\r\n}\r\n\r\nexport const initializeBlogs = () => {\r\n  return async dispatch => { \r\n    const blogs = await blogService.getAll()\r\n      dispatch({\r\n        type: 'INIT',\r\n        data: blogs,\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport default blogReducer"]},"metadata":{},"sourceType":"module"}