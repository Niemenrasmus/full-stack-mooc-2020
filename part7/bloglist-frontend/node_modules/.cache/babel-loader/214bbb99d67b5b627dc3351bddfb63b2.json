{"ast":null,"code":"import blogService from '../services/blogs';\n\nconst blogReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log('state now: ', state);\n  console.log('action', action);\n\n  switch (action.type) {\n    case 'LIKE':\n      return state.map(blog => blog.id !== action.data.blog.id ? blog : action.data.blog);\n\n    case \"NEW_BLOG\":\n      const blogToAdd = action.data;\n      return [...state, blogToAdd];\n\n    case \"INIT\":\n      return action.data;\n\n    default:\n      return state;\n  }\n};\n\nexport const updateBlog = blog => {\n  return async dispatch => {\n    await blogService.updateBlog(blog.id, blog);\n    dispatch({\n      type: \"LIKE\",\n      data: {\n        blog\n      }\n    });\n  };\n};\nexport const createBlog = content => {\n  return async dispatch => {\n    const blog = await blogService.create(content);\n    console.log(blog);\n    dispatch({\n      type: 'NEW_ANECDOTE',\n      data: blog\n    });\n  };\n};\nexport const initializeBlogs = () => {\n  return async dispatch => {\n    const blogs = await blogService.getAll();\n    dispatch({\n      type: 'INIT',\n      data: blogs\n    });\n  };\n};\nexport default blogReducer;","map":{"version":3,"sources":["C:/Users/Power User/OneDrive - Aalto University/Documents/Full-Stack-Mooc/Full-Stack-Mooc-2020/part7/bloglist-frontend/src/reducers/blogReducer.js"],"names":["blogService","blogReducer","state","action","console","log","type","map","blog","id","data","blogToAdd","updateBlog","dispatch","createBlog","content","create","initializeBlogs","blogs","getAll"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,mBAAxB;;AAGA,MAAMC,WAAW,GAAG,YAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;AAC1CC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BH,KAA3B;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,MAAtB;;AAEA,UAAQA,MAAM,CAACG,IAAf;AACE,SAAK,MAAL;AACE,aAAOJ,KAAK,CAACK,GAAN,CAAUC,IAAI,IACnBA,IAAI,CAACC,EAAL,KAAYN,MAAM,CAACO,IAAP,CAAYF,IAAZ,CAAiBC,EAA7B,GAAkCD,IAAlC,GAAyCL,MAAM,CAACO,IAAP,CAAYF,IADhD,CAAP;;AAEF,SAAK,UAAL;AACE,YAAMG,SAAS,GAAGR,MAAM,CAACO,IAAzB;AACA,aAAO,CAAC,GAAGR,KAAJ,EAAWS,SAAX,CAAP;;AACF,SAAK,MAAL;AACI,aAAOR,MAAM,CAACO,IAAd;;AACJ;AAAS,aAAOR,KAAP;AATX;AAWD,CAfD;;AAiBA,OAAO,MAAMU,UAAU,GAAIJ,IAAD,IAAU;AAClC,SAAO,MAAMK,QAAN,IAAkB;AACvB,UAAMb,WAAW,CAACY,UAAZ,CAAuBJ,IAAI,CAACC,EAA5B,EAAgCD,IAAhC,CAAN;AACAK,IAAAA,QAAQ,CAAC;AACPP,MAAAA,IAAI,EAAE,MADC;AAEPI,MAAAA,IAAI,EAAE;AAAEF,QAAAA;AAAF;AAFC,KAAD,CAAR;AAID,GAND;AAOD,CARM;AAUP,OAAO,MAAMM,UAAU,GAAIC,OAAD,IAAa;AACrC,SAAO,MAAMF,QAAN,IAAkB;AACvB,UAAML,IAAI,GAAG,MAAMR,WAAW,CAACgB,MAAZ,CAAmBD,OAAnB,CAAnB;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AACEK,IAAAA,QAAQ,CAAC;AACPP,MAAAA,IAAI,EAAE,cADC;AAEPI,MAAAA,IAAI,EAAEF;AAFC,KAAD,CAAR;AAIH,GAPD;AAQD,CATM;AAWP,OAAO,MAAMS,eAAe,GAAG,MAAM;AACnC,SAAO,MAAMJ,QAAN,IAAkB;AACvB,UAAMK,KAAK,GAAG,MAAMlB,WAAW,CAACmB,MAAZ,EAApB;AACEN,IAAAA,QAAQ,CAAC;AACPP,MAAAA,IAAI,EAAE,MADC;AAEPI,MAAAA,IAAI,EAAEQ;AAFC,KAAD,CAAR;AAIH,GAND;AAOD,CARM;AAWP,eAAejB,WAAf","sourcesContent":["import blogService from '../services/blogs'\r\n\r\n\r\nconst blogReducer = (state = [], action) => {\r\n  console.log('state now: ', state)\r\n  console.log('action', action)\r\n\r\n  switch (action.type) {\r\n    case 'LIKE':\r\n      return state.map(blog => \r\n        blog.id !== action.data.blog.id ? blog : action.data.blog)    \r\n    case \"NEW_BLOG\":\r\n      const blogToAdd = action.data\r\n      return [...state, blogToAdd]\r\n    case \"INIT\":\r\n        return action.data\r\n    default: return state\r\n  }\r\n}\r\n\r\nexport const updateBlog = (blog) => {\r\n  return async dispatch => {\r\n    await blogService.updateBlog(blog.id, blog)\r\n    dispatch({\r\n      type: \"LIKE\", \r\n      data: { blog } \r\n    })\r\n  }\r\n}\r\n\r\nexport const createBlog = (content) => {\r\n  return async dispatch => { \r\n    const blog = await blogService.create(content)\r\n    console.log(blog)\r\n      dispatch({\r\n        type: 'NEW_ANECDOTE',\r\n        data: blog,\r\n    })\r\n  }\r\n}\r\n\r\nexport const initializeBlogs = () => {\r\n  return async dispatch => { \r\n    const blogs = await blogService.getAll()\r\n      dispatch({\r\n        type: 'INIT',\r\n        data: blogs,\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport default blogReducer"]},"metadata":{},"sourceType":"module"}