{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Power User\\\\OneDrive - Aalto University\\\\Documents\\\\Full-Stack-Mooc\\\\Full-Stack-Mooc-2020\\\\part7\\\\bloglist-frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Blog from './components/Blog';\nimport Notification from \"./components/Notification\";\nimport blogService from './services/blogs';\nimport loginService from './services/login';\nimport LoginForm from \"./components/LoginForm\";\nimport BlogForm from \"./components/BlogForm\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport Togglable from './components/Togglable';\nimport { setNotification } from './reducers/notificationReducer';\nimport { initializeBlogs } from './reducers/blogReducer';\nimport { voteBlog } from './reducers/blogReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null);\n  const blogs = useSelector(state => state.blogs);\n  const dispatch = useDispatch(); // const [notificationMessage, setNotificationMessage] = useState(null);\n  // const [title, setTitle] = useState('')\n  // const [author, setAuthor] = useState('') \n  // const [url, setUrl] = useState('') \n  // const [blogs, setBlogs] = useState([])\n\n  const addBlogRef = /*#__PURE__*/React.createRef(); // useEffect(() => {\n  //   blogService.getAll().then(blogs =>\n  //     setBlogs(blogs.sort((a,b) => a.likes > b.likes ? -1 : 1))\n  //   )  \n  // }, [])\n\n  useEffect(() => {\n    dispatch(initializeBlogs());\n  }, [dispatch]);\n  console.log(blogs, \"blogs\");\n  useEffect(() => {\n    const loggedInUserJSON = window.localStorage.getItem('loggedUser');\n\n    if (loggedInUserJSON) {\n      const user = JSON.parse(loggedInUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []);\n\n  const handleLogin = async event => {\n    event.preventDefault();\n\n    try {\n      const user = await loginService({\n        username,\n        password\n      });\n      console.log(user.id, \"user.id\");\n      window.localStorage.setItem('loggedUser', JSON.stringify(user));\n      blogService.setToken(user.token);\n      setUser(user);\n      setUsername('');\n      setPassword(''); // setNotificationMessage(user.username + ' logged in')\n\n      dispatch(setNotification(user.username + ' logged in', 5));\n      console.log(\"Something logged in\"); // setTimeout(() => {\n      //   setNotificationMessage(null)\n      // }, 5000)\n    } catch (exception) {\n      console.log(exception);\n      dispatch(setNotification('wrong credentials', 5)); // setNotificationMessage('wrong credentials')\n      //   setTimeout(() => {\n      //     setNotificationMessage(null)\n      //   }, 5000)\n    }\n  };\n\n  const handleLogout = async () => {\n    window.localStorage.clear();\n    setUser(null);\n  }; // const createBlog = async (blogObject) => {\n  //   addBlogRef.current.toggleVisibility()\n  //   await blogService\n  //   .create(blogObject)\n  //     dispatch(setNotification((`New blog: ${blogObject.title} ${blogObject.author} created`, 5)))\n  //     dispatch(initializeBlogs())  \n  // }\n\n\n  const blogAddForm = () => {\n    return /*#__PURE__*/_jsxDEV(Togglable, {\n      buttonText: \"Add Blog\",\n      ref: addBlogRef,\n      children: /*#__PURE__*/_jsxDEV(BlogForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }, this);\n  }; // const likeBlog = async (id, blogObject) => {\n  //   try {  \n  //     const response =  await blogService.updateBlog(id, blogObject)\n  //     // console.log(response)\n  //     const updatedBlog = {\n  //       ...blogObject,\n  //       id,\n  //     }\n  //     dispatch(setNotification(\"Liked blog \" + blogObject.title, 5))\n  //     console.log(\"liked blog\")\n  //     setBlogs(blogs.map((blog) => (blog.id !== id ? blog : updatedBlog)))\n  //   } catch (err) {\n  //     console.error(err)\n  //     dispatch(setNotification(err, 5))\n  //     // setTimeout(() => {\n  //     //   setNotificationMessage(null)\n  //     // }, 5000)\n  //   }\n  // }\n\n\n  const likeBlog = async (id, blogObject) => {\n    try {\n      await voteBlog(id, blogObject);\n      dispatch(setNotification(\"Liked blog \" + blogObject.title, 5)); // dispatch(initializeBlogs())\n    } catch (err) {\n      console.error(err);\n      dispatch(setNotification(err, 5));\n    }\n  };\n\n  const deleteBlog = async (id, blogObject) => {}; // const deleteBlog = async (id) => {\n  //   try {\n  //     const blog = blogs.filter((blog) => blog.id === id)\n  //     if (window.confirm(`Remove ${blog[0].title} by ${blog[0].author}`)) {\n  //       // delete blog from db\n  //       const response = await blogService.deleteBlog(id)\n  //       console.log(response)\n  //       // update state to reflect deletion in UI\n  //       setBlogs(blogs.filter((blog) => blog.id !== id))\n  //     }\n  //   } catch (err) {\n  //     console.error(err)\n  //     dispatch(setNotification(err, 5))\n  //     // setTimeout(() => {\n  //     //   setNotificationMessage(null)\n  //     // }, 5000)\n  //   }\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Welcome to blog app\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }, this), user === null ? /*#__PURE__*/_jsxDEV(LoginForm, {\n      handleSubmit: handleLogin,\n      username: username,\n      password: password,\n      setUsername: setUsername,\n      setPassword: setPassword\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          children: \" Log Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"blogs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this), blogAddForm(), blogs.sort((a, b) => b.likes - a.likes).map(blog => /*#__PURE__*/_jsxDEV(Blog, {\n        user: user,\n        blog: blog,\n        likeBlog: likeBlog,\n        deleteBlog: deleteBlog\n      }, blog.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 7\n  }, this);\n};\n\n_s(App, \"S3ul2wMddbqrvwhPFA73atp+ZH8=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Power User/OneDrive - Aalto University/Documents/Full-Stack-Mooc/Full-Stack-Mooc-2020/part7/bloglist-frontend/src/App.js"],"names":["React","useState","useEffect","Blog","Notification","blogService","loginService","LoginForm","BlogForm","useDispatch","useSelector","Togglable","setNotification","initializeBlogs","voteBlog","App","username","setUsername","password","setPassword","user","setUser","blogs","state","dispatch","addBlogRef","createRef","console","log","loggedInUserJSON","window","localStorage","getItem","JSON","parse","setToken","token","handleLogin","event","preventDefault","id","setItem","stringify","exception","handleLogout","clear","blogAddForm","likeBlog","blogObject","title","err","error","deleteBlog","sort","a","b","likes","map","blog"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react'\r\nimport Blog from './components/Blog'\r\nimport Notification from \"./components/Notification\"\r\nimport blogService from './services/blogs'\r\nimport loginService from './services/login'\r\nimport LoginForm from \"./components/LoginForm\"\r\nimport BlogForm from \"./components/BlogForm\"\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport Togglable from './components/Togglable'\r\n\r\nimport { setNotification } from './reducers/notificationReducer'\r\nimport { initializeBlogs } from './reducers/blogReducer'\r\nimport { voteBlog } from './reducers/blogReducer'\r\n\r\nconst App = () => {\r\n  const [username, setUsername] = useState('') \r\n  const [password, setPassword] = useState('')\r\n  const [user, setUser] = useState(null)\r\n\r\n  const blogs = useSelector(state => state.blogs)\r\n  const dispatch = useDispatch()\r\n  // const [notificationMessage, setNotificationMessage] = useState(null);\r\n\r\n  // const [title, setTitle] = useState('')\r\n  // const [author, setAuthor] = useState('') \r\n  // const [url, setUrl] = useState('') \r\n  \r\n  // const [blogs, setBlogs] = useState([])\r\n\r\n  const addBlogRef = React.createRef();\r\n\r\n  // useEffect(() => {\r\n  //   blogService.getAll().then(blogs =>\r\n  //     setBlogs(blogs.sort((a,b) => a.likes > b.likes ? -1 : 1))\r\n  //   )  \r\n  // }, [])\r\n  useEffect(() => {\r\n    dispatch(initializeBlogs())\r\n    }, [dispatch])\r\n\r\n  console.log(blogs, \"blogs\")\r\n  \r\n  useEffect(() => {\r\n    const loggedInUserJSON = window.localStorage.getItem('loggedUser');\r\n    if (loggedInUserJSON) {\r\n      const user = JSON.parse(loggedInUserJSON);\r\n      setUser(user);\r\n      blogService.setToken(user.token);\r\n    }\r\n  }, []);\r\n  \r\n  const handleLogin = async (event) => {\r\n    event.preventDefault();\r\n    \r\n    try {\r\n      const user = await loginService({\r\n        username, password\r\n      });\r\n      console.log(user.id, \"user.id\")\r\n      window.localStorage.setItem('loggedUser', JSON.stringify(user));\r\n      blogService.setToken(user.token)\r\n      setUser(user)\r\n      setUsername('')\r\n      setPassword('')\r\n      // setNotificationMessage(user.username + ' logged in')\r\n      dispatch(setNotification(user.username + ' logged in', 5))\r\n      console.log(\"Something logged in\")\r\n      // setTimeout(() => {\r\n      //   setNotificationMessage(null)\r\n      // }, 5000)\r\n    } \r\n    catch (exception) {\r\n      console.log(exception)\r\n      dispatch(setNotification('wrong credentials', 5))\r\n      // setNotificationMessage('wrong credentials')\r\n    //   setTimeout(() => {\r\n    //     setNotificationMessage(null)\r\n    //   }, 5000)\r\n    }\r\n  }\r\n  \r\n\r\n  const handleLogout = async () => {\r\n    window.localStorage.clear()\r\n    setUser(null);\r\n  }\r\n\r\n  // const createBlog = async (blogObject) => {\r\n  //   addBlogRef.current.toggleVisibility()\r\n  //   await blogService\r\n  //   .create(blogObject)\r\n  //     dispatch(setNotification((`New blog: ${blogObject.title} ${blogObject.author} created`, 5)))\r\n  //     dispatch(initializeBlogs())  \r\n  // }\r\n\r\n\r\n  const blogAddForm  = () => {\r\n    return (\r\n    <Togglable buttonText='Add Blog' ref={addBlogRef} >\r\n      <BlogForm/>\r\n      </Togglable> \r\n    )  \r\n}\r\n\r\n  // const likeBlog = async (id, blogObject) => {\r\n    \r\n  //   try {  \r\n      \r\n  //     const response =  await blogService.updateBlog(id, blogObject)\r\n     \r\n  //     // console.log(response)\r\n      \r\n  //     const updatedBlog = {\r\n  //       ...blogObject,\r\n  //       id,\r\n  //     }\r\n\r\n  //     dispatch(setNotification(\"Liked blog \" + blogObject.title, 5))\r\n  //     console.log(\"liked blog\")\r\n  //     setBlogs(blogs.map((blog) => (blog.id !== id ? blog : updatedBlog)))\r\n      \r\n  //   } catch (err) {\r\n  //     console.error(err)\r\n  //     dispatch(setNotification(err, 5))\r\n\r\n  //     // setTimeout(() => {\r\n  //     //   setNotificationMessage(null)\r\n  //     // }, 5000)\r\n  //   }\r\n  // }\r\n  const likeBlog = async (id, blogObject) => {\r\n    try {  \r\n      await voteBlog(id, blogObject)\r\n      dispatch(setNotification(\"Liked blog \" + blogObject.title, 5))\r\n      // dispatch(initializeBlogs())\r\n    }\r\n    catch (err) {\r\n      console.error(err)\r\n      dispatch(setNotification(err, 5))\r\n    }\r\n  }\r\n\r\n\r\n  const deleteBlog = async (id, blogObject) => {\r\n  }\r\n  // const deleteBlog = async (id) => {\r\n  //   try {\r\n  //     const blog = blogs.filter((blog) => blog.id === id)\r\n\r\n  //     if (window.confirm(`Remove ${blog[0].title} by ${blog[0].author}`)) {\r\n  //       // delete blog from db\r\n  //       const response = await blogService.deleteBlog(id)\r\n        \r\n  //       console.log(response)\r\n  //       // update state to reflect deletion in UI\r\n  //       setBlogs(blogs.filter((blog) => blog.id !== id))\r\n  //     }\r\n  //   } catch (err) {\r\n  //     console.error(err)\r\n  //     dispatch(setNotification(err, 5))\r\n  //     // setTimeout(() => {\r\n  //     //   setNotificationMessage(null)\r\n  //     // }, 5000)\r\n  //   }\r\n  // }\r\n  \r\n\r\n\r\n    return (\r\n      <div>\r\n        <h2>Welcome to blog app</h2>\r\n        <Notification/>\r\n          {user === null\r\n          ? <LoginForm\r\n            handleSubmit={handleLogin}\r\n            username={username}\r\n            password={password}\r\n            setUsername={setUsername}\r\n            setPassword={setPassword}\r\n          />\r\n          : <div>\r\n          <p>\r\n          <button onClick={handleLogout}> Log Out</button> \r\n          </p>\r\n          <h2>blogs</h2>\r\n          {blogAddForm()}\r\n          { blogs\r\n            .sort((a, b) => b.likes - a.likes)\r\n            .map((blog) => (\r\n            <Blog  \r\n            key={blog.id}\r\n            user={user}\r\n            blog={blog} \r\n            likeBlog={likeBlog}\r\n            deleteBlog={deleteBlog}\r\n            />\r\n          ))}\r\n          </div>}        \r\n         </div>\r\n    )\r\n  }\r\n\r\nexport default App"]},"metadata":{},"sourceType":"module"}