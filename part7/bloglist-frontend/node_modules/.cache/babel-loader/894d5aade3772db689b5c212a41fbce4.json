{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Power User\\\\OneDrive - Aalto University\\\\Documents\\\\Full-Stack-Mooc\\\\full-stack-mooc-2020\\\\part7\\\\bloglist-frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Blog, { BlogView } from './components/Blog';\nimport Notification from \"./components/Notification\";\nimport LoginForm from \"./components/LoginForm\";\nimport BlogForm from \"./components/BlogForm\";\nimport Users, { UserView } from \"./components/Users\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport Togglable from './components/Togglable';\nimport { setNotification } from './reducers/notificationReducer';\nimport { initializeBlogs } from './reducers/blogReducer';\nimport { updateBlog } from './reducers/blogReducer';\nimport { deleteBlog } from './reducers/blogReducer';\nimport { setUser, logoutUser } from './reducers/userReducer';\nimport { Switch, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const user = useSelector(state => state.user);\n  const blogs = useSelector(state => state.blogs);\n  const dispatch = useDispatch();\n  const addBlogRef = /*#__PURE__*/React.createRef();\n  useEffect(() => {\n    dispatch(initializeBlogs());\n  }, [dispatch]);\n  console.log(user, \"user\");\n  useEffect(() => {\n    const loggedInUserJSON = window.localStorage.getItem('loggedUser');\n\n    if (loggedInUserJSON) {\n      const user = JSON.parse(loggedInUserJSON);\n      dispatch(setUser(user));\n    }\n\n    console.log(user);\n  }, []);\n\n  const handleLogout = async () => {\n    window.localStorage.clear();\n    window.location.reload();\n  };\n\n  const blogAddForm = () => {\n    return /*#__PURE__*/_jsxDEV(Togglable, {\n      buttonText: \"Add Blog\",\n      ref: addBlogRef,\n      children: /*#__PURE__*/_jsxDEV(BlogForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this);\n  };\n\n  const likeBlog = async blogObject => {\n    try {\n      await dispatch(updateBlog(blogObject));\n      dispatch(setNotification(\"Liked blog \" + blogObject.title, 5));\n    } catch (err) {\n      console.error(err);\n      dispatch(setNotification(err, 5));\n    }\n  };\n\n  const removeBlog = async id => {\n    try {\n      await dispatch(deleteBlog(id));\n      dispatch(setNotification(\"Deleted blog \", 5));\n    } catch (err) {\n      console.error(err);\n      dispatch(setNotification(err, 5));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Welcome to blog app\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/users/:id\",\n        children: /*#__PURE__*/_jsxDEV(UserView, {\n          allBlogs: blogs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/blogs/:id\",\n        children: /*#__PURE__*/_jsxDEV(BlogView, {\n          allBlogs: blogs,\n          likeBlog: likeBlog\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/users\",\n        component: Users\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        children: [/*#__PURE__*/_jsxDEV(Notification, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), user === null ? /*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleLogout,\n              children: \" Log Out\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"blogs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 11\n          }, this), blogAddForm(), /*#__PURE__*/_jsxDEV(\"table\", {\n            children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Blog Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this), blogs.sort((a, b) => b.likes - a.likes).map(blog => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(Blog, {\n                  user: user,\n                  blog: blog,\n                  likeBlog: likeBlog,\n                  deleteBlog: removeBlog\n                }, blog.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 25\n                }, this)\n              }, blog.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 7\n  }, this);\n};\n\n_s(App, \"heVXhUayBfMszpuOUaEjict2DhM=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Power User/OneDrive - Aalto University/Documents/Full-Stack-Mooc/full-stack-mooc-2020/part7/bloglist-frontend/src/App.js"],"names":["React","useState","useEffect","Blog","BlogView","Notification","LoginForm","BlogForm","Users","UserView","useDispatch","useSelector","Togglable","setNotification","initializeBlogs","updateBlog","deleteBlog","setUser","logoutUser","Switch","Route","App","user","state","blogs","dispatch","addBlogRef","createRef","console","log","loggedInUserJSON","window","localStorage","getItem","JSON","parse","handleLogout","clear","location","reload","blogAddForm","likeBlog","blogObject","title","err","error","removeBlog","id","sort","a","b","likes","map","blog"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react'\r\nimport Blog, { BlogView } from './components/Blog'\r\nimport Notification from \"./components/Notification\"\r\nimport LoginForm from \"./components/LoginForm\"\r\nimport BlogForm from \"./components/BlogForm\"\r\nimport Users, { UserView } from \"./components/Users\"\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport Togglable from './components/Togglable'\r\n\r\nimport { setNotification } from './reducers/notificationReducer'\r\nimport { initializeBlogs } from './reducers/blogReducer'\r\nimport { updateBlog } from './reducers/blogReducer'\r\nimport { deleteBlog } from './reducers/blogReducer'\r\nimport { setUser, logoutUser } from './reducers/userReducer'\r\n\r\nimport { Switch, Route } from 'react-router-dom'\r\n\r\nconst App = () => {\r\n  const user = useSelector(state => state.user)\r\n  const blogs = useSelector(state => state.blogs)\r\n  const dispatch = useDispatch()\r\n\r\n  const addBlogRef = React.createRef()\r\n\r\n  useEffect(() => {\r\n    dispatch(initializeBlogs())\r\n    }, [dispatch])\r\n\r\n  console.log(user, \"user\")\r\n  \r\n  useEffect(() => {\r\n    const loggedInUserJSON = window.localStorage.getItem('loggedUser')\r\n    if (loggedInUserJSON) {\r\n      const user = JSON.parse(loggedInUserJSON)\r\n      dispatch(setUser(user))  \r\n    }\r\n    console.log(user)\r\n  }, [])\r\n  \r\n  \r\n  const handleLogout = async () => {\r\n    window.localStorage.clear()\r\n    window.location.reload()\r\n  }\r\n\r\n  const blogAddForm  = () => {\r\n    return (\r\n    <Togglable buttonText='Add Blog' ref={addBlogRef} >\r\n      <BlogForm/>\r\n      </Togglable> \r\n    )  \r\n}\r\n\r\n  const likeBlog = async (blogObject) => {\r\n    try {  \r\n      await dispatch(updateBlog(blogObject))\r\n      dispatch(setNotification(\"Liked blog \" + blogObject.title, 5))\r\n    }\r\n    catch (err) {\r\n      console.error(err)\r\n      dispatch(setNotification(err, 5))\r\n    }\r\n  }\r\n\r\n  const removeBlog = async (id) => {\r\n    try {  \r\n      await dispatch(deleteBlog(id))\r\n      dispatch(setNotification(\"Deleted blog \", 5))\r\n    }\r\n    catch (err) {\r\n      console.error(err)\r\n      dispatch(setNotification(err, 5))\r\n    }\r\n  \r\n  }\r\n\r\n    return (\r\n      <div>\r\n        <h2>Welcome to blog app</h2>\r\n        <Switch>\r\n          <Route path='/users/:id'>\r\n            <UserView allBlogs={blogs} />\r\n          </Route>\r\n          <Route path='/blogs/:id'>\r\n            <BlogView allBlogs={blogs} likeBlog = {likeBlog} />\r\n          </Route>\r\n          <Route path='/users' component={Users} />\r\n          <Route path='/'>\r\n          <Notification/>\r\n          {user === null\r\n          ? <LoginForm/>\r\n          : <div>\r\n          <p>\r\n          <button onClick={handleLogout}> Log Out</button> \r\n          </p>\r\n          <h2>blogs</h2>\r\n          {blogAddForm()}\r\n          <table >\r\n            <tbody>\r\n                <tr>\r\n                    <th>Blog Name</th>\r\n                </tr>\r\n                { blogs\r\n                        .sort((a, b) => b.likes - a.likes)\r\n                        .map((blog) => (\r\n                      <tr key={blog.id}>\r\n                        <Blog  \r\n                        key={blog.id}\r\n                        user={user}\r\n                        blog={blog} \r\n                        likeBlog={likeBlog}\r\n                        deleteBlog={removeBlog}\r\n                        />\r\n                        </tr>\r\n                      ))}\r\n            </tbody>\r\n        </table>        \r\n          </div>}\r\n          </Route>        \r\n          </Switch>\r\n         </div>\r\n    )\r\n  }\r\n\r\nexport default App"]},"metadata":{},"sourceType":"module"}