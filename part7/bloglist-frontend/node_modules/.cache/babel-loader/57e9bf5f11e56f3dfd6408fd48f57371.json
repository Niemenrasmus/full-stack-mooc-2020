{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = '/api/blogs';\nlet token = null;\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`;\n};\n\nconst updateBlog = async (id, updatedContents) => {\n  // console.log(typeof(updatedContents))\n  try {\n    console.log(`${baseUrl}/${id}`);\n    const response = await axios.put(`${baseUrl}/${id}`, updatedContents);\n    console.log(response);\n    return response;\n  } catch (exception) {\n    console.log(exception);\n    return {\n      error: exception.message\n    };\n  }\n};\n\nconst create = async newObject => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const response = await axios.post(baseUrl, newObject, config);\n  return response.data;\n};\n\nconst deleteBlog = async id => {\n  try {\n    console.log(`${baseUrl}/${id}`);\n    const response = await axios.delete(`${baseUrl}/${id}`);\n    console.log(response);\n    return response;\n  } catch (exception) {\n    return {\n      error: exception.message\n    };\n  }\n};\n\nconst getComments = async id => {\n  const response = await axios.get(`${baseUrl}/${id}/comments`);\n  return response.data;\n};\n\nconst exportedObject = {\n  getAll,\n  setToken,\n  create,\n  updateBlog,\n  deleteBlog,\n  getComments\n};\nexport default exportedObject;","map":{"version":3,"sources":["C:/Users/Power User/OneDrive - Aalto University/Documents/Full-Stack-Mooc/full-stack-mooc-2020/part7/bloglist-frontend/src/services/blogs.js"],"names":["axios","baseUrl","token","getAll","request","get","then","response","data","setToken","newToken","updateBlog","id","updatedContents","console","log","put","exception","error","message","create","newObject","config","headers","Authorization","post","deleteBlog","delete","getComments","exportedObject"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAG,YAAhB;AACA,IAAIC,KAAK,GAAG,IAAZ;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAMC,OAAO,GAAGJ,KAAK,CAACK,GAAN,CAAUJ,OAAV,CAAhB;AACA,SAAOG,OAAO,CAACE,IAAR,CAAaC,QAAQ,IAAIA,QAAQ,CAACC,IAAlC,CAAP;AACD,CAHD;;AAKA,MAAMC,QAAQ,GAAGC,QAAQ,IAAI;AAC3BR,EAAAA,KAAK,GAAI,UAASQ,QAAS,EAA3B;AACD,CAFD;;AAIA,MAAMC,UAAU,GAAG,OAAOC,EAAP,EAAWC,eAAX,KAA+B;AAChD;AAEA,MAAI;AACFC,IAAAA,OAAO,CAACC,GAAR,CAAa,GAAEd,OAAQ,IAAGW,EAAG,EAA7B;AACA,UAAML,QAAQ,GAAG,MAAMP,KAAK,CAACgB,GAAN,CAAW,GAAEf,OAAQ,IAAGW,EAAG,EAA3B,EAA8BC,eAA9B,CAAvB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AACA,WAAOA,QAAP;AAED,GAND,CAME,OAAOU,SAAP,EAAkB;AAClBH,IAAAA,OAAO,CAACC,GAAR,CAAYE,SAAZ;AACA,WAAO;AAAEC,MAAAA,KAAK,EAAGD,SAAS,CAACE;AAApB,KAAP;AACD;AACF,CAbD;;AAeA,MAAMC,MAAM,GAAG,MAAMC,SAAN,IAAmB;AAChC,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAEtB;AAAjB;AADI,GAAf;AAIA,QAAMK,QAAQ,GAAG,MAAMP,KAAK,CAACyB,IAAN,CAAWxB,OAAX,EAAoBoB,SAApB,EAA+BC,MAA/B,CAAvB;AACA,SAAOf,QAAQ,CAACC,IAAhB;AACD,CAPD;;AASA,MAAMkB,UAAU,GAAG,MAAMd,EAAN,IAAY;AAC7B,MAAI;AACFE,IAAAA,OAAO,CAACC,GAAR,CAAa,GAAEd,OAAQ,IAAGW,EAAG,EAA7B;AACA,UAAML,QAAQ,GAAG,MAAMP,KAAK,CAAC2B,MAAN,CAAc,GAAE1B,OAAQ,IAAGW,EAAG,EAA9B,CAAvB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AACA,WAAOA,QAAP;AACD,GALD,CAKE,OAAOU,SAAP,EAAkB;AAClB,WAAO;AAAEC,MAAAA,KAAK,EAAGD,SAAS,CAACE;AAApB,KAAP;AACD;AACF,CATD;;AAWA,MAAMS,WAAW,GAAG,MAAMhB,EAAN,IAAY;AAC5B,QAAML,QAAQ,GAAG,MAAMP,KAAK,CAACK,GAAN,CAAW,GAAEJ,OAAQ,IAAGW,EAAG,WAA3B,CAAvB;AACA,SAAOL,QAAQ,CAACC,IAAhB;AACH,CAHD;;AAKA,MAAMqB,cAAc,GAAG;AACrB1B,EAAAA,MADqB;AAErBM,EAAAA,QAFqB;AAGrBW,EAAAA,MAHqB;AAIrBT,EAAAA,UAJqB;AAKrBe,EAAAA,UALqB;AAMrBE,EAAAA;AANqB,CAAvB;AASA,eAAeC,cAAf","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\nlet token = null;\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst updateBlog = async (id, updatedContents) => {\r\n  // console.log(typeof(updatedContents))\r\n\r\n  try {\r\n    console.log(`${baseUrl}/${id}`)\r\n    const response = await axios.put(`${baseUrl}/${id}`, updatedContents)\r\n    console.log(response)\r\n    return response\r\n\r\n  } catch (exception) {\r\n    console.log(exception)\r\n    return { error : exception.message }\r\n  }\r\n}\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst deleteBlog = async id => {\r\n  try {\r\n    console.log(`${baseUrl}/${id}`)\r\n    const response = await axios.delete(`${baseUrl}/${id}`)\r\n    console.log(response)\r\n    return response\r\n  } catch (exception) {\r\n    return { error : exception.message }\r\n  }\r\n}\r\n\r\nconst getComments = async id => {\r\n    const response = await axios.get(`${baseUrl}/${id}/comments`)\r\n    return response.data\r\n}\r\n\r\nconst exportedObject = {\r\n  getAll,\r\n  setToken,\r\n  create,\r\n  updateBlog,\r\n  deleteBlog,\r\n  getComments\r\n}\r\n\r\nexport default exportedObject"]},"metadata":{},"sourceType":"module"}