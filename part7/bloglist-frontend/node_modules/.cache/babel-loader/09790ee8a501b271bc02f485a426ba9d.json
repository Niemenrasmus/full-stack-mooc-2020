{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Power User\\\\OneDrive - Aalto University\\\\Documents\\\\Full-Stack-Mooc\\\\Full-Stack-Mooc-2020\\\\part7\\\\bloglist-frontend\\\\src\\\\components\\\\Blog.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Blog = _ref => {\n  let {\n    blog,\n    likeBlog,\n    deleteBlog,\n    user\n  } = _ref;\n\n  const handleLike = () => {\n    var _blog$user;\n\n    const {\n      id,\n      author,\n      url,\n      title\n    } = blog;\n    const updatedBlog = {\n      id: blog.id,\n      user: ((_blog$user = blog.user) === null || _blog$user === void 0 ? void 0 : _blog$user.id) || blog.user,\n      likes: blog.likes + 1,\n      author: author,\n      title: title,\n      url: url\n    }; // console.log(id ,updatedBlog)\n\n    updatedBlog(id, updatedBlog);\n  };\n\n  const handleDelete = () => {\n    const id = blog.id;\n    console.log(id);\n    deleteBlog(id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [blog.title, \" \", blog.author, \" \", blog.url, \" \", blog.likes, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLike,\n      children: \"Like\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 56\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDelete,\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 99\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }, this);\n}; // const Blog = ({blog, notificationCallback, setBlogs, blogs}) => {\n//   const handleLike = async () => {\n//     // try {\n//       const updatedContents = { author : blog.author, url : blog.url, user : blog.user.id, likes : blog.likes + 1 }\n//       const response = await blogService.updateBlog({id : blog.id, updatedContents})\n//       let blogList = blogs.map(b => b.id !== updatedContents.id ? b : updatedContents);\n//       setBlogs(blogList);\n//       if (response.error) {\n//         notificationCallback\n//         (\"response-error \" + response.error)\n//         setTimeout(() => {\n//           notificationCallback(null)\n//         }, 5000)\n//       } else {\n//         notificationCallback(`Liked ${blog.title} by ${blog.author}!` )\n//         setTimeout(() => {\n//           notificationCallback(null)\n//         }, 5000)\n//       }\n//     // } catch (exception) {\n//     //   notificationCallback(\"expetion: \" + exception.message )\n//     //   setTimeout(() => {\n//     //     notificationCallback(null)\n//     //   }, 5000)\n//     // }\n//     // window.location.reload();\n//   }\n//   const deleteBlog = async () => {\n//     if (window.confirm(`Remove blog ${blog.title} by ${blog.author}?`)) {\n//       const response = await blogService.deleteBlog({ id : blog.id })\n//       if (response.error) {\n//         notificationCallback(\"response-error \" + response.error)\n//       } else {\n//         notificationCallback(`Deleted ${blog.title}`)\n//       }\n//     }\n//   }\n//   return (\n//   <div>\n//     {blog.title} {blog.author} {blog.url} {blog.likes} <button onClick={handleLike}>Like</button> <button onClick={deleteBlog}>Delete</button>\n//   </div>  \n//   )\n// }\n\n\n_c = Blog;\nexport default Blog;\n\nvar _c;\n\n$RefreshReg$(_c, \"Blog\");","map":{"version":3,"sources":["C:/Users/Power User/OneDrive - Aalto University/Documents/Full-Stack-Mooc/Full-Stack-Mooc-2020/part7/bloglist-frontend/src/components/Blog.js"],"names":["React","Blog","blog","likeBlog","deleteBlog","user","handleLike","id","author","url","title","updatedBlog","likes","handleDelete","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,MAAMC,IAAI,GAAG,QAA0C;AAAA,MAAzC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA,UAAlB;AAA8BC,IAAAA;AAA9B,GAAyC;;AAErD,QAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,UAAM;AAAEC,MAAAA,EAAF;AAAMC,MAAAA,MAAN;AAAcC,MAAAA,GAAd;AAAmBC,MAAAA;AAAnB,QAA6BR,IAAnC;AAEA,UAAMS,WAAW,GACjB;AACEJ,MAAAA,EAAE,EAAEL,IAAI,CAACK,EADX;AAEEF,MAAAA,IAAI,EAAE,eAAAH,IAAI,CAACG,IAAL,0DAAWE,EAAX,KAAiBL,IAAI,CAACG,IAF9B;AAGEO,MAAAA,KAAK,EAAEV,IAAI,CAACU,KAAL,GAAa,CAHtB;AAIEJ,MAAAA,MAAM,EAAEA,MAJV;AAKEE,MAAAA,KAAK,EAAEA,KALT;AAMED,MAAAA,GAAG,EAAEA;AANP,KADA,CAHuB,CAYvB;;AACAE,IAAAA,WAAW,CAACJ,EAAD,EAAKI,WAAL,CAAX;AACD,GAdD;;AAgBA,QAAME,YAAY,GAAG,MAAM;AACzB,UAAMN,EAAE,GAAGL,IAAI,CAACK,EAAhB;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYR,EAAZ;AACAH,IAAAA,UAAU,CAACG,EAAD,CAAV;AACD,GAJD;;AAMA,sBACA;AAAA,eACGL,IAAI,CAACQ,KADR,OACgBR,IAAI,CAACM,MADrB,OAC8BN,IAAI,CAACO,GADnC,OACyCP,IAAI,CAACU,KAD9C,oBACqD;AAAQ,MAAA,OAAO,EAAEN,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADrD,oBACgG;AAAQ,MAAA,OAAO,EAAEO,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADhG;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAKD,CA7BD,C,CAiCA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;KAhFMZ,I;AAkFN,eAAeA,IAAf","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst Blog = ({ blog, likeBlog, deleteBlog, user }) => {\r\n\r\n  const handleLike = () => {\r\n    const { id, author, url, title } = blog\r\n\r\n    const updatedBlog = \r\n    {\r\n      id: blog.id,\r\n      user: blog.user?.id || blog.user,\r\n      likes: blog.likes + 1,  \r\n      author: author,\r\n      title: title,\r\n      url: url\r\n    }\r\n    // console.log(id ,updatedBlog)\r\n    updatedBlog(id, updatedBlog)\r\n  }\r\n\r\n  const handleDelete = () => {\r\n    const id = blog.id\r\n    console.log(id)\r\n    deleteBlog(id)\r\n  }\r\n\r\n  return (\r\n  <div>\r\n    {blog.title} {blog.author} {blog.url} {blog.likes} <button onClick={handleLike}>Like</button> <button onClick={handleDelete}>Delete</button>\r\n  </div>  \r\n  )\r\n}\r\n    \r\n\r\n\r\n// const Blog = ({blog, notificationCallback, setBlogs, blogs}) => {\r\n  \r\n\r\n//   const handleLike = async () => {\r\n//     // try {\r\n//       const updatedContents = { author : blog.author, url : blog.url, user : blog.user.id, likes : blog.likes + 1 }\r\n//       const response = await blogService.updateBlog({id : blog.id, updatedContents})\r\n//       let blogList = blogs.map(b => b.id !== updatedContents.id ? b : updatedContents);\r\n//       setBlogs(blogList);\r\n//       if (response.error) {\r\n//         notificationCallback\r\n//         (\"response-error \" + response.error)\r\n//         setTimeout(() => {\r\n//           notificationCallback(null)\r\n//         }, 5000)\r\n//       } else {\r\n//         notificationCallback(`Liked ${blog.title} by ${blog.author}!` )\r\n//         setTimeout(() => {\r\n//           notificationCallback(null)\r\n//         }, 5000)\r\n//       }\r\n//     // } catch (exception) {\r\n//     //   notificationCallback(\"expetion: \" + exception.message )\r\n//     //   setTimeout(() => {\r\n//     //     notificationCallback(null)\r\n//     //   }, 5000)\r\n//     // }\r\n//     // window.location.reload();\r\n//   }\r\n\r\n\r\n//   const deleteBlog = async () => {\r\n//     if (window.confirm(`Remove blog ${blog.title} by ${blog.author}?`)) {\r\n//       const response = await blogService.deleteBlog({ id : blog.id })\r\n//       if (response.error) {\r\n//         notificationCallback(\"response-error \" + response.error)\r\n//       } else {\r\n//         notificationCallback(`Deleted ${blog.title}`)\r\n//       }\r\n//     }\r\n//   }\r\n\r\n//   return (\r\n//   <div>\r\n//     {blog.title} {blog.author} {blog.url} {blog.likes} <button onClick={handleLike}>Like</button> <button onClick={deleteBlog}>Delete</button>\r\n//   </div>  \r\n//   )\r\n// }\r\n\r\nexport default Blog"]},"metadata":{},"sourceType":"module"}