{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Power User\\\\OneDrive - Aalto University\\\\Documents\\\\Full-Stack-Mooc\\\\full-stack-mooc-2020\\\\part7\\\\bloglist-frontend\\\\src\\\\components\\\\Blog.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { TableCell } from '@material-ui/core';\nimport blogService from '../services/blogs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BlogView = _ref => {\n  _s();\n\n  let {\n    allBlogs,\n    likeBlog\n  } = _ref;\n  const [comments, setComments] = useState([]);\n  const id = useParams().id;\n  const blog = allBlogs.find(b => b.id === id);\n\n  const handleLike = () => {\n    var _blog$user;\n\n    const {\n      author,\n      url,\n      title\n    } = blog;\n    const updatedBlog = {\n      id: blog.id,\n      user: ((_blog$user = blog.user) === null || _blog$user === void 0 ? void 0 : _blog$user.id) || blog.user,\n      likes: blog.likes + 1,\n      author: author,\n      title: title,\n      url: url\n    };\n    likeBlog(updatedBlog);\n  };\n\n  const getBlogComments = async id => {\n    const comments = await blogService.getComments(id);\n    setComments(comments);\n  };\n\n  useEffect(() => {\n    getBlogComments();\n  }, []);\n\n  const giveComment = async event => {\n    event.preventDefault();\n    const body = event.target.inputComment.value;\n    event.target.inputComment.value = '';\n    const comment = {\n      'body': body\n    };\n    const addedComment = await blogService.postComment(id, comment);\n    setComments(comments.concat(addedComment));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: blog.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: blog.url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"added by \", blog.user.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [blog.likes, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLike,\n        children: \"Like\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), comments !== null && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: comments.map(comment => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: comment.body\n        }, comment.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 26\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: giveComment,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"give comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BlogView, \"0sPE+1ikGG99Cmt7j2H0Z06RJjw=\", false, function () {\n  return [useParams];\n});\n\n_c = BlogView;\n\nconst Blog = _ref2 => {\n  let {\n    blog\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(TableCell, {\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: `/blogs/${blog.id}`,\n      children: blog.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Blog;\nexport default Blog;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BlogView\");\n$RefreshReg$(_c2, \"Blog\");","map":{"version":3,"sources":["C:/Users/Power User/OneDrive - Aalto University/Documents/Full-Stack-Mooc/full-stack-mooc-2020/part7/bloglist-frontend/src/components/Blog.js"],"names":["React","useState","useEffect","Link","useParams","TableCell","blogService","BlogView","allBlogs","likeBlog","comments","setComments","id","blog","find","b","handleLike","author","url","title","updatedBlog","user","likes","getBlogComments","getComments","giveComment","event","preventDefault","body","target","inputComment","value","comment","addedComment","postComment","concat","username","map","Blog"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { TableCell } from '@material-ui/core'\r\nimport blogService from '../services/blogs'\r\n\r\n\r\nexport const BlogView = ({ allBlogs, likeBlog }) => {\r\n    const [comments, setComments] = useState([])\r\n    const id = useParams().id\r\n    const blog = allBlogs.find(b => b.id === id)\r\n\r\n\r\n    const handleLike = () => {\r\n      const { author, url, title } = blog\r\n  \r\n      const updatedBlog = \r\n      {\r\n        id: blog.id,\r\n        user: blog.user?.id || blog.user,\r\n        likes: blog.likes + 1,  \r\n        author: author,\r\n        title: title,\r\n        url: url\r\n      }\r\n      likeBlog(updatedBlog)\r\n    }\r\n\r\n    const getBlogComments = async (id) => {\r\n      const comments = await blogService.getComments(id)\r\n      setComments(comments) \r\n    }\r\n\r\n    useEffect(() => {\r\n      getBlogComments()\r\n      }, [])\r\n\r\n    const giveComment = async (event) => {\r\n      event.preventDefault();\r\n      const body = event.target.inputComment.value\r\n      event.target.inputComment.value = ''\r\n      const comment = {\r\n        'body': body,\r\n      }\r\n      const addedComment = await blogService.postComment(id, comment)\r\n      setComments(comments.concat(addedComment))\r\n    }\r\n  \r\n    return (\r\n    <div>\r\n      <div>\r\n      <h2>{blog.title}</h2>\r\n      <div>\r\n      {blog.url}\r\n      </div>\r\n      </div>\r\n      <div>  \r\n      added by {blog.user.username} \r\n      </div>\r\n      <div>\r\n      {blog.likes} <button onClick={handleLike}>Like</button>\r\n      </div>\r\n      <h2>comments</h2>\r\n      {comments !== null && \r\n          <ul>{\r\n              comments.map(comment => {\r\n                  return <li key={comment.id}>{comment.body}</li>\r\n              })}\r\n          </ul>\r\n      }\r\n      <form onSubmit={giveComment}>\r\n        <button type='submit'>give comment</button>\r\n      </form>\r\n\r\n    </div>  \r\n    )\r\n  }\r\n\r\nconst Blog = ({ blog }) => {\r\n\r\n  return (\r\n    <TableCell>\r\n      <Link to={`/blogs/${blog.id}`}>\r\n      {blog.title}\r\n      </Link>\r\n    </TableCell>\r\n  )\r\n}\r\n\r\nexport default Blog"]},"metadata":{},"sourceType":"module"}