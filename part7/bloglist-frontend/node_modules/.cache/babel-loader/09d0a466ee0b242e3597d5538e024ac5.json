{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Power User\\\\OneDrive - Aalto University\\\\Documents\\\\Full-Stack-Mooc\\\\Full-Stack-Mooc-2020\\\\part7\\\\bloglist-frontend\\\\src\\\\components\\\\Togglable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useImperativeHandle } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Togglable = /*#__PURE__*/React.forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  const [visible, setVisible] = useState(false);\n  const hideWhenVisible = {\n    display: visible ? 'none' : 'block'\n  };\n  const showWhenVisible = {\n    display: visible ? 'block' : 'none'\n  };\n\n  const toggleVisibility = () => {\n    setVisible(!visible);\n  };\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: hideWhenVisible,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleVisibility,\n        children: props.buttonText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"togglable-content\",\n      style: showWhenVisible,\n      children: [props.children, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleVisibility,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}, \"7Y5lBLdF9mkfoiy3F9Lk5HPUzvA=\", false, function () {\n  return [useImperativeHandle];\n}));\n_c2 = Togglable;\nTogglable.propTypes = {\n  buttonText: PropTypes.string.isRequired\n};\nTogglable.displayName = 'Togglable';\nexport default Togglable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Togglable$React.forwardRef\");\n$RefreshReg$(_c2, \"Togglable\");","map":{"version":3,"sources":["C:/Users/Power User/OneDrive - Aalto University/Documents/Full-Stack-Mooc/Full-Stack-Mooc-2020/part7/bloglist-frontend/src/components/Togglable.js"],"names":["React","useState","useImperativeHandle","PropTypes","Togglable","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","buttonText","children","propTypes","string","isRequired","displayName"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,mBAA1B,QAAqD,OAArD;AACE,OAAOC,SAAP,MAAsB,YAAtB;;AAEF,MAAMC,SAAS,gBAAGJ,KAAK,CAACK,UAAN,SAAiB,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAAA;;AACjD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAMS,eAAe,GAAG;AAAEC,IAAAA,OAAO,EAAEH,OAAO,GAAI,MAAJ,GAAa;AAA/B,GAAxB;AACA,QAAMI,eAAe,GAAG;AAAED,IAAAA,OAAO,EAAEH,OAAO,GAAG,OAAH,GAAa;AAA/B,GAAxB;;AAEA,QAAMK,gBAAgB,GAAG,MAAM;AAC7BJ,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD,GAFD;;AAIAN,EAAAA,mBAAmB,CAACK,GAAD,EAAM,MAAM;AAC7B,WAAO;AACLM,MAAAA;AADK,KAAP;AAGD,GAJkB,CAAnB;AAMA,sBACE;AAAA,4BACE;AAAK,MAAA,KAAK,EAAEH,eAAZ;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAEG,gBAAjB;AAAA,kBAAoCP,KAAK,CAACQ;AAA1C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAmC,MAAA,KAAK,EAAEF,eAA1C;AAAA,iBACGN,KAAK,CAACS,QADT,eAEE;AAAQ,QAAA,OAAO,EAAEF,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA3BiB;AAAA,UAUhBX,mBAVgB;AAAA,GAAlB;MAAME,S;AA6BNA,SAAS,CAACY,SAAV,GAAsB;AACpBF,EAAAA,UAAU,EAAEX,SAAS,CAACc,MAAV,CAAiBC;AADT,CAAtB;AAIAd,SAAS,CAACe,WAAV,GAAwB,WAAxB;AAEA,eAAef,SAAf","sourcesContent":["import React, { useState, useImperativeHandle } from 'react'\r\n  import PropTypes from 'prop-types'\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ?  'none' : 'block' }\r\n  const showWhenVisible = { display: visible ? 'block' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <button onClick={toggleVisibility}>{props.buttonText}</button>\r\n      </div>\r\n      <div className=\"togglable-content\" style={showWhenVisible}>\r\n        {props.children}\r\n        <button onClick={toggleVisibility}>Cancel</button>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nTogglable.propTypes = {\r\n  buttonText: PropTypes.string.isRequired,\r\n}\r\n\r\nTogglable.displayName = 'Togglable'\r\n\r\nexport default Togglable;"]},"metadata":{},"sourceType":"module"}