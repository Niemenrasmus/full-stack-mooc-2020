{"ast":null,"code":"var _jsxFileName = \"/home/rasmusniemi/full-stack-mooc-2020/part5/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Blog from './components/Blog';\nimport Notification from \"./components/Notification\";\nimport blogService from './services/blogs';\nimport loginService from './services/login';\nimport LoginForm from \"./components/LoginForm\";\nimport BlogForm from \"./components/BlogForm\";\nimport Togglable from './components/Togglable';\n\nconst App = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null);\n  const [notificationMessage, setNotificationMessage] = useState(null); // const [title, setTitle] = useState('')\n  // const [author, setAuthor] = useState('') \n  // const [url, setUrl] = useState('') \n\n  const [blogs, setBlogs] = useState([]);\n  const [newBlog, setNewBlog] = useState('');\n  const addBlogRef = React.createRef();\n  useEffect(() => {\n    blogService.getAll().then(blogs => setBlogs(blogs.sort((a, b) => a.likes > b.likes ? -1 : 1)));\n  }, []);\n  useEffect(() => {\n    const loggedInUserJSON = window.localStorage.getItem('loggedUser');\n\n    if (loggedInUserJSON) {\n      const user = JSON.parse(loggedInUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []);\n\n  const handleLogin = async event => {\n    event.preventDefault();\n\n    try {\n      const user = await loginService({\n        username,\n        password\n      });\n      console.log(user.id, \"user.id\");\n      window.localStorage.setItem('loggedUser', JSON.stringify(user));\n      blogService.setToken(user.token);\n      setUser(user);\n      setUsername('');\n      setPassword('');\n    } catch (exception) {\n      console.log(exception);\n      setNotificationMessage('wrong credentials');\n      setTimeout(() => {\n        setNotificationMessage(null);\n      }, 5000);\n    }\n  };\n\n  const handleLogout = async () => {\n    window.localStorage.clear();\n    setUser(null);\n  };\n\n  const blogAddForm = () => {\n    return /*#__PURE__*/React.createElement(Togglable, {\n      buttonText: \"Add Blog\",\n      ref: addBlogRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(BlogForm // handleBlogChange = {handleBlogChange}\n    , {\n      setBlogs: setBlogs,\n      setNotificationMessage: setNotificationMessage,\n      blogRef: addBlogRef // title = {title}  \n      // author = {author}\n      // url = {url}\n      // setTitle = {setTitle} \n      // setAuthor = {setAuthor}\n      // setUrl = {setUrl}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }));\n  };\n\n  const likeBlog = async (id, blogObject) => {\n    try {\n      console.log(id, \"id in delete blog 1\");\n      const response = await blogService.updateBlog(id, blogObject);\n      console.log(response);\n      console.log(id, \"id in delete blog 2\");\n      const updatedBlog = { ...blogObject,\n        id\n      };\n      setBlogs(blogs.map(blog => blog.id !== id ? blog : updatedBlog));\n    } catch (err) {\n      console.error(err);\n      setNotificationMessage({\n        err\n      });\n      setTimeout(() => {\n        setNotificationMessage(null);\n      }, 5000);\n    }\n  };\n\n  const deleteBlog = async id => {\n    try {\n      const blog = blogs.filter(blog => blog.id === id);\n\n      if (window.confirm(`Remove ${blog[0].title} by ${blog[0].author}`)) {\n        // delete blog from db\n        const response = await blogService.deleteBlog(id);\n        console.log(response); // update state to reflect deletion in UI\n\n        setBlogs(blogs.filter(blog => blog.id !== id));\n      }\n    } catch (err) {\n      console.error(err);\n      setNotificationMessage({\n        err\n      });\n      setTimeout(() => {\n        setNotificationMessage(null);\n      }, 5000);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, \"Welcome to blog app\"), /*#__PURE__*/React.createElement(Notification, {\n    message: notificationMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }), user === null ? /*#__PURE__*/React.createElement(LoginForm, {\n    handleSubmit: handleLogin,\n    username: username,\n    password: password,\n    setUsername: setUsername,\n    setPassword: setPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleLogout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }, \" Log Out\")), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, \"blogs\"), blogAddForm(), blogs.sort((a, b) => b.likes - a.likes).map(blog => /*#__PURE__*/React.createElement(Blog, {\n    key: blog.id,\n    user: user,\n    blog: blog,\n    likeBlog: likeBlog,\n    deleteBlog: deleteBlog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }) // <Blog \n  // key={blog.id}\n  // user = { user } \n  // blog={blog}\n  // notificationCallback = {setNotificationMessage} \n  // blogs = {blogs}\n  // setBlogs = {setBlogs}\n  // />\n  )));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/rasmusniemi/full-stack-mooc-2020/part5/src/App.js"],"names":["React","useState","useEffect","Blog","Notification","blogService","loginService","LoginForm","BlogForm","Togglable","App","username","setUsername","password","setPassword","user","setUser","notificationMessage","setNotificationMessage","blogs","setBlogs","newBlog","setNewBlog","addBlogRef","createRef","getAll","then","sort","a","b","likes","loggedInUserJSON","window","localStorage","getItem","JSON","parse","setToken","token","handleLogin","event","preventDefault","console","log","id","setItem","stringify","exception","setTimeout","handleLogout","clear","blogAddForm","likeBlog","blogObject","response","updateBlog","updatedBlog","map","blog","err","error","deleteBlog","filter","confirm","title","author"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react'\nimport Blog from './components/Blog'\nimport Notification from \"./components/Notification\"\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport LoginForm from \"./components/LoginForm\"\nimport BlogForm from \"./components/BlogForm\"\n\nimport Togglable from './components/Togglable'\n\n\nconst App = () => {\n  const [username, setUsername] = useState('') \n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null) \n  const [notificationMessage, setNotificationMessage] = useState(null);\n\n  // const [title, setTitle] = useState('')\n  // const [author, setAuthor] = useState('') \n  // const [url, setUrl] = useState('') \n  \n  const [blogs, setBlogs] = useState([])\n  const [newBlog, setNewBlog] = useState('')\n\n  const addBlogRef = React.createRef();\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs(blogs.sort((a,b) => a.likes > b.likes ? -1 : 1))\n    )  \n  }, [])\n\n  useEffect(() => {\n    const loggedInUserJSON = window.localStorage.getItem('loggedUser');\n    if (loggedInUserJSON) {\n      const user = JSON.parse(loggedInUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []);\n  \n  const handleLogin = async (event) => {\n    event.preventDefault();\n    \n    try {\n      const user = await loginService({\n        username, password\n      });\n      console.log(user.id, \"user.id\")\n      window.localStorage.setItem('loggedUser', JSON.stringify(user));\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      console.log(exception)\n      setNotificationMessage('wrong credentials')\n      setTimeout(() => {\n        setNotificationMessage(null)\n      }, 5000)\n    }\n  }\n  \n\n  const handleLogout = async () => {\n    window.localStorage.clear()\n    setUser(null);\n  }\n\n  \n  const blogAddForm  = () => {\n    return (\n    <Togglable buttonText='Add Blog' ref={addBlogRef} >\n      <BlogForm\n        // handleBlogChange = {handleBlogChange}\n        setBlogs = {setBlogs}\n        setNotificationMessage = {setNotificationMessage}\n        blogRef = {addBlogRef}\n        // title = {title}  \n        // author = {author}\n        // url = {url}\n        // setTitle = {setTitle} \n        // setAuthor = {setAuthor}\n        // setUrl = {setUrl}\n        />\n      </Togglable> \n    )  \n}\n\n  const likeBlog = async (id, blogObject) => {\n    \n    try {  \n      \n      console.log(id, \"id in delete blog 1\")\n      const response =  await blogService.updateBlog(id, blogObject)\n     \n      console.log(response)\n      console.log(id, \"id in delete blog 2\")\n      \n      const updatedBlog = {\n        ...blogObject,\n        id,\n      }\n\n      setBlogs(blogs.map((blog) => (blog.id !== id ? blog : updatedBlog)))\n      \n    } catch (err) {\n      console.error(err)\n      setNotificationMessage({err})\n\n      setTimeout(() => {\n        setNotificationMessage(null)\n      }, 5000)\n    }\n  }\n\n  const deleteBlog = async (id) => {\n    try {\n      const blog = blogs.filter((blog) => blog.id === id)\n\n      if (window.confirm(`Remove ${blog[0].title} by ${blog[0].author}`)) {\n        // delete blog from db\n        const response = await blogService.deleteBlog(id)\n        \n        console.log(response)\n        // update state to reflect deletion in UI\n        setBlogs(blogs.filter((blog) => blog.id !== id))\n      }\n    } catch (err) {\n      console.error(err)\n      setNotificationMessage({err})\n      setTimeout(() => {\n        setNotificationMessage(null)\n      }, 5000)\n    }\n  }\n\n\n    return (\n      <div>\n        <h2>Welcome to blog app</h2>\n        <Notification message={notificationMessage} />\n        {user === null\n          ? <LoginForm\n            handleSubmit={handleLogin}\n            username={username}\n            password={password}\n            setUsername={setUsername}\n            setPassword={setPassword}\n          />\n          : <div>\n          <p>\n          <button onClick={handleLogout}> Log Out</button> \n          </p>\n          <h2>blogs</h2>\n          {blogAddForm()}\n          { blogs\n            .sort((a, b) => b.likes - a.likes)\n            .map((blog) => (\n            <Blog  \n            key={blog.id}\n            user={user}\n            blog={blog}\n            likeBlog={likeBlog}\n            deleteBlog={deleteBlog}\n            />\n            // <Blog \n            // key={blog.id}\n            // user = { user } \n            // blog={blog}\n            // notificationCallback = {setNotificationMessage} \n            // blogs = {blogs}\n            // setBlogs = {setBlogs}\n            // />\n          ))}\n          </div>}        \n         </div>\n    )\n  }\n\nexport default App"]},"metadata":{},"sourceType":"module"}