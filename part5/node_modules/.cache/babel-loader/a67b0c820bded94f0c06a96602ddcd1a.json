{"ast":null,"code":"var _jsxFileName = \"/home/rasmusniemi/full-stack-mooc-2020/part5/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Blog from './components/Blog';\nimport Notification from \"./components/Notification\";\nimport blogService from './services/blogs';\nimport loginService from './services/login';\nimport LoginForm from \"./components/LoginForm\";\nimport BlogForm from \"./components/BlogForm\";\nimport Togglable from './components/Togglable';\n\nconst App = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null);\n  const [notificationMessage, setNotificationMessage] = useState(null);\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n  const [url, setUrl] = useState('');\n  const [blogs, setBlogs] = useState([]);\n  const [newBlog, setNewBlog] = useState('');\n  const addBlogRef = React.createRef();\n  useEffect(() => {\n    blogService.getAll().then(blogs => setBlogs(blogs.sort((a, b) => a.likes > b.likes ? -1 : 1)));\n  }, []);\n  useEffect(() => {\n    const loggedInUserJSON = window.localStorage.getItem('loggedUser');\n\n    if (loggedInUserJSON) {\n      const user = JSON.parse(loggedInUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []);\n\n  const handleLogin = async event => {\n    event.preventDefault();\n\n    try {\n      const user = await loginService({\n        username,\n        password\n      });\n      window.localStorage.setItem('loggedUser', JSON.stringify(user));\n      blogService.setToken(user.token);\n      setUser(user);\n      setUsername('');\n      setPassword('');\n    } catch (exception) {\n      console.log(exception);\n      setNotificationMessage('wrong credentials');\n      setTimeout(() => {\n        setNotificationMessage(null);\n      }, 5000);\n    }\n  };\n\n  const handleLogout = async () => {\n    window.localStorage.clear();\n    setUser(null);\n  };\n\n  const addBlog = async event => {\n    event.preventDefault();\n\n    try {\n      const blogObject = {\n        title: title,\n        author: author,\n        url: url,\n        user: user.id\n      };\n      setNotificationMessage(`New blog ${title} by ${author} was added`);\n      addBlogRef.current.toggleVisibility();\n      const added_blog = await blogService.create(blogObject).then(returnedBlog => {\n        setBlogs(blogs.concat(returnedBlog));\n        console.log(added_blog);\n      });\n      setTimeout(() => {\n        setNotificationMessage(null);\n      }, 4000);\n    } catch (exception) {\n      setNotificationMessage('Invalid blog details');\n      setTimeout(() => {\n        setNotificationMessage(null);\n      }, 4000);\n    }\n  };\n\n  const handleBlogChange = event => {\n    console.log(event.target.value);\n    setNewBlog(event.target.value);\n    console.log(newBlog);\n    addBlog(event);\n    setAuthor('');\n    setTitle('');\n    setUrl('');\n  };\n\n  const blogForm = () => {\n    return /*#__PURE__*/React.createElement(Togglable, {\n      buttonText: \"Add Blog\",\n      ref: addBlogRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(BlogForm, {\n      handleBlogChange: handleBlogChange,\n      title: title,\n      author: author,\n      url: url,\n      setTitle: setTitle,\n      setAuthor: setAuthor,\n      setUrl: setUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }\n    }));\n  };\n\n  const likeBlog = async (id, blogObject) => {\n    try {\n      console.log(id, \"id in delete blog 1\");\n      const response = await blogService.updateBlog(id, blogObject);\n      console.log(response);\n      console.log(id, \"id in delete blog 2\");\n      const updatedBlog = { ...blogObject,\n        id\n      };\n      setBlogs(blogs.map(blog => blog.id !== id ? blog : updatedBlog));\n    } catch (err) {\n      console.error(err);\n      setNotificationMessage({\n        err\n      });\n      setTimeout(() => {\n        setNotificationMessage(null);\n      }, 5000);\n    }\n  };\n\n  const deleteBlog = async id => {\n    try {\n      const blog = blogs.filter(blog => blog.id === id);\n\n      if (window.confirm(`Remove ${blog[0].title} by ${blog[0].author}`)) {\n        // delete blog from db\n        console.log(id, \"id in delete blog\");\n        const response = await blogService.deleteBlog(id);\n        console.log(response);\n        console.log(user, \"user\"); // update state to reflect deletion in UI\n\n        setBlogs(blogs.filter(blog => blog.id !== id));\n      }\n    } catch (err) {\n      console.error(err);\n      setNotificationMessage({\n        err\n      });\n      setTimeout(() => {\n        setNotificationMessage(null);\n      }, 5000);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }, \"Welcome to blog app\"), /*#__PURE__*/React.createElement(Notification, {\n    message: notificationMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }), user === null ? /*#__PURE__*/React.createElement(LoginForm, {\n    handleSubmit: handleLogin,\n    username: username,\n    password: password,\n    setUsername: setUsername,\n    setPassword: setPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleLogout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 11\n    }\n  }, \" Log Out\")), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  }, \"blogs\"), blogForm(), \"console.log(user)\", blogs.map(blog => /*#__PURE__*/React.createElement(Blog, {\n    key: blog.id,\n    user: user,\n    blog: blog,\n    likeBlog: likeBlog,\n    deleteBlog: deleteBlog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }\n  }) // <Blog \n  // key={blog.id}\n  // user = { user } \n  // blog={blog}\n  // notificationCallback = {setNotificationMessage} \n  // blogs = {blogs}\n  // setBlogs = {setBlogs}\n  // />\n  )));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/rasmusniemi/full-stack-mooc-2020/part5/src/App.js"],"names":["React","useState","useEffect","Blog","Notification","blogService","loginService","LoginForm","BlogForm","Togglable","App","username","setUsername","password","setPassword","user","setUser","notificationMessage","setNotificationMessage","title","setTitle","author","setAuthor","url","setUrl","blogs","setBlogs","newBlog","setNewBlog","addBlogRef","createRef","getAll","then","sort","a","b","likes","loggedInUserJSON","window","localStorage","getItem","JSON","parse","setToken","token","handleLogin","event","preventDefault","setItem","stringify","exception","console","log","setTimeout","handleLogout","clear","addBlog","blogObject","id","current","toggleVisibility","added_blog","create","returnedBlog","concat","handleBlogChange","target","value","blogForm","likeBlog","response","updateBlog","updatedBlog","map","blog","err","error","deleteBlog","filter","confirm"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react'\nimport Blog from './components/Blog'\nimport Notification from \"./components/Notification\"\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport LoginForm from \"./components/LoginForm\"\nimport BlogForm from \"./components/BlogForm\"\n\nimport Togglable from './components/Togglable'\n\n\nconst App = () => {\n  const [username, setUsername] = useState('') \n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null) \n  const [notificationMessage, setNotificationMessage] = useState(null);\n\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('') \n  const [url, setUrl] = useState('') \n  \n  const [blogs, setBlogs] = useState([])\n  const [newBlog, setNewBlog] = useState('')\n\n  const addBlogRef = React.createRef();\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs(blogs.sort((a,b) => a.likes > b.likes ? -1 : 1))\n    )  \n  }, [])\n\n  useEffect(() => {\n    const loggedInUserJSON = window.localStorage.getItem('loggedUser');\n    if (loggedInUserJSON) {\n      const user = JSON.parse(loggedInUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []);\n  \n  const handleLogin = async (event) => {\n    event.preventDefault();\n    \n    try {\n      const user = await loginService({\n        username, password\n      });\n      window.localStorage.setItem('loggedUser', JSON.stringify(user));\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      console.log(exception)\n      setNotificationMessage('wrong credentials')\n      setTimeout(() => {\n        setNotificationMessage(null)\n      }, 5000)\n    }\n  }\n  \n\n  const handleLogout = async () => {\n    window.localStorage.clear()\n    setUser(null);\n  }\n\n  const addBlog = async (event) => {\n    event.preventDefault()\n    try {\n      const blogObject = {\n        title: title,\n        author: author,\n        url: url,\n        user: user.id\n      }\n      setNotificationMessage(`New blog ${title} by ${author} was added`)\n      addBlogRef.current.toggleVisibility()\n      const added_blog = await blogService\n        .create(blogObject)\n          .then(returnedBlog => {\n          setBlogs(blogs.concat(returnedBlog))\n          console.log(added_blog)\n        })\n        setTimeout(() => {\n          setNotificationMessage(null);\n        }, 4000);\n    }\n\n    catch(exception) {\n      setNotificationMessage('Invalid blog details');\n      setTimeout(() => {\n        setNotificationMessage(null);\n      }, 4000);\n    }  \n  }\n\n  \n\n  const handleBlogChange = (event) => {\n    console.log(event.target.value)\n    setNewBlog(event.target.value)\n    console.log(newBlog)\n    addBlog(event)\n    setAuthor('')\n    setTitle('')\n    setUrl('')\n  }\n\n  \n  const blogForm  = () => {\n    return (\n    <Togglable buttonText='Add Blog' ref={addBlogRef} >\n      <BlogForm\n        handleBlogChange = {handleBlogChange}\n        title = {title}  \n        author = {author}\n        url = {url}\n        setTitle = {setTitle} \n        setAuthor = {setAuthor}\n        setUrl = {setUrl}\n        />\n      </Togglable> \n    )  \n}\n\n  const likeBlog = async (id, blogObject) => {\n    \n    try {  \n      \n      console.log(id, \"id in delete blog 1\")\n      const response =  await blogService.updateBlog(id, blogObject)\n     \n      console.log(response)\n      console.log(id, \"id in delete blog 2\")\n      \n      const updatedBlog = {\n        ...blogObject,\n        id,\n      }\n\n      setBlogs(blogs.map((blog) => (blog.id !== id ? blog : updatedBlog)))\n      \n    } catch (err) {\n      console.error(err)\n      setNotificationMessage({err})\n\n      setTimeout(() => {\n        setNotificationMessage(null)\n      }, 5000)\n    }\n  }\n\n  const deleteBlog = async (id) => {\n    try {\n      const blog = blogs.filter((blog) => blog.id === id)\n\n      if (window.confirm(`Remove ${blog[0].title} by ${blog[0].author}`)) {\n        // delete blog from db\n        console.log(id, \"id in delete blog\")\n        const response = await blogService.deleteBlog(id)\n        \n        console.log(response)\n        console.log(user, \"user\")\n        // update state to reflect deletion in UI\n        setBlogs(blogs.filter((blog) => blog.id !== id))\n      }\n    } catch (err) {\n      console.error(err)\n      setNotificationMessage({err})\n      setTimeout(() => {\n        setNotificationMessage(null)\n      }, 5000)\n    }\n  }\n\n\n    return (\n      <div>\n        <h2>Welcome to blog app</h2>\n        <Notification message={notificationMessage} />\n        {user === null\n          ? <LoginForm\n            handleSubmit={handleLogin}\n            username={username}\n            password={password}\n            setUsername={setUsername}\n            setPassword={setPassword}\n          />\n          : <div>\n          <p>\n          <button onClick={handleLogout}> Log Out</button> \n          </p>\n          <h2>blogs</h2>\n          {blogForm()}\n          console.log(user)\n          { blogs.map(blog =>\n            <Blog  \n            key={blog.id}\n            user={user}\n            blog={blog}\n            likeBlog={likeBlog}\n            deleteBlog={deleteBlog}\n            />\n            // <Blog \n            // key={blog.id}\n            // user = { user } \n            // blog={blog}\n            // notificationCallback = {setNotificationMessage} \n            // blogs = {blogs}\n            // setBlogs = {setBlogs}\n            // />\n          )}\n          </div>}        \n         </div>\n    )\n  }\n\nexport default App"]},"metadata":{},"sourceType":"module"}