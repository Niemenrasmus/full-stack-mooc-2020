{"ast":null,"code":"var _jsxFileName = \"/home/rasmusniemi/full-stack-mooc-2020/part5/src/components/Blog.js\";\nimport React, { useState } from 'react';\n\nconst Blog = _ref => {\n  let {\n    blog,\n    likeBlog,\n    deleteBlog,\n    user\n  } = _ref;\n\n  const handleLike = () => {\n    var _blog$user, _blog$user2, _blog$user3;\n\n    const {\n      id,\n      author,\n      url,\n      title\n    } = blog;\n    const updatedBlog = {\n      user: ((_blog$user = blog.user) === null || _blog$user === void 0 ? void 0 : _blog$user.id) || blog.user,\n      likes: blog.likes + 1,\n      title,\n      author,\n      url\n    };\n    setPostedBy(postedBy || ((_blog$user2 = blog.user) === null || _blog$user2 === void 0 ? void 0 : _blog$user2.name));\n    setUsername(username || ((_blog$user3 = blog.user) === null || _blog$user3 === void 0 ? void 0 : _blog$user3.username));\n    likeBlog(id, updatedBlog);\n  };\n\n  const handleDelete = () => {\n    const {\n      id\n    } = blog;\n    deleteBlog(id);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 3\n    }\n  }, blog.title, \" \", blog.author, \" \", blog.url, \" \", blog.likes, \" \", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 56\n    }\n  }, \"Like\"), \" \", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: deleteBlog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 101\n    }\n  }, \"Delete\"));\n}; // const Blog = ({blog, notificationCallback, setBlogs, blogs}) => {\n//   const handleLike = async () => {\n//     // try {\n//       const updatedContents = { author : blog.author, url : blog.url, user : blog.user.id, likes : blog.likes + 1 }\n//       const response = await blogService.updateBlog({id : blog.id, updatedContents})\n//       let blogList = blogs.map(b => b.id !== updatedContents.id ? b : updatedContents);\n//       setBlogs(blogList);\n//       if (response.error) {\n//         notificationCallback\n//         (\"response-error \" + response.error)\n//         setTimeout(() => {\n//           notificationCallback(null)\n//         }, 5000)\n//       } else {\n//         notificationCallback(`Liked ${blog.title} by ${blog.author}!` )\n//         setTimeout(() => {\n//           notificationCallback(null)\n//         }, 5000)\n//       }\n//     // } catch (exception) {\n//     //   notificationCallback(\"expetion: \" + exception.message )\n//     //   setTimeout(() => {\n//     //     notificationCallback(null)\n//     //   }, 5000)\n//     // }\n//     // window.location.reload();\n//   }\n//   const deleteBlog = async () => {\n//     if (window.confirm(`Remove blog ${blog.title} by ${blog.author}?`)) {\n//       const response = await blogService.deleteBlog({ id : blog.id })\n//       if (response.error) {\n//         notificationCallback(\"response-error \" + response.error)\n//       } else {\n//         notificationCallback(`Deleted ${blog.title}`)\n//       }\n//     }\n//   }\n//   return (\n//   <div>\n//     {blog.title} {blog.author} {blog.url} {blog.likes} <button onClick={handleLike}>Like</button> <button onClick={deleteBlog}>Delete</button>\n//   </div>  \n//   )\n// }\n\n\nexport default Blog;","map":{"version":3,"sources":["/home/rasmusniemi/full-stack-mooc-2020/part5/src/components/Blog.js"],"names":["React","useState","Blog","blog","likeBlog","deleteBlog","user","handleLike","id","author","url","title","updatedBlog","likes","setPostedBy","postedBy","name","setUsername","username","handleDelete"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAGA,MAAMC,IAAI,GAAG,QAA0C;AAAA,MAAzC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA,UAAlB;AAA8BC,IAAAA;AAA9B,GAAyC;;AAErD,QAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,UAAM;AAAEC,MAAAA,EAAF;AAAMC,MAAAA,MAAN;AAAcC,MAAAA,GAAd;AAAmBC,MAAAA;AAAnB,QAA6BR,IAAnC;AACA,UAAMS,WAAW,GAAG;AAClBN,MAAAA,IAAI,EAAE,eAAAH,IAAI,CAACG,IAAL,0DAAWE,EAAX,KAAiBL,IAAI,CAACG,IADV;AAElBO,MAAAA,KAAK,EAAEV,IAAI,CAACU,KAAL,GAAa,CAFF;AAGlBF,MAAAA,KAHkB;AAIlBF,MAAAA,MAJkB;AAKlBC,MAAAA;AALkB,KAApB;AAQAI,IAAAA,WAAW,CAACC,QAAQ,oBAAIZ,IAAI,CAACG,IAAT,gDAAI,YAAWU,IAAf,CAAT,CAAX;AACAC,IAAAA,WAAW,CAACC,QAAQ,oBAAIf,IAAI,CAACG,IAAT,gDAAI,YAAWY,QAAf,CAAT,CAAX;AACAd,IAAAA,QAAQ,CAACI,EAAD,EAAKI,WAAL,CAAR;AACD,GAbD;;AAeA,QAAMO,YAAY,GAAG,MAAM;AACzB,UAAM;AAAEX,MAAAA;AAAF,QAASL,IAAf;AAEAE,IAAAA,UAAU,CAACG,EAAD,CAAV;AACD,GAJD;;AAMA,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,IAAI,CAACQ,KADR,OACgBR,IAAI,CAACM,MADrB,OAC8BN,IAAI,CAACO,GADnC,OACyCP,IAAI,CAACU,KAD9C,oBACqD;AAAQ,IAAA,OAAO,EAAEM,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADrD,oBACkG;AAAQ,IAAA,OAAO,EAAEd,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADlG,CADA;AAKD,CA5BD,C,CAiCA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeH,IAAf","sourcesContent":["import React, {useState} from 'react'\n\n\nconst Blog = ({ blog, likeBlog, deleteBlog, user }) => {\n\n  const handleLike = () => {\n    const { id, author, url, title } = blog\n    const updatedBlog = {\n      user: blog.user?.id || blog.user,\n      likes: blog.likes + 1,\n      title,\n      author,\n      url,\n    }\n\n    setPostedBy(postedBy || blog.user?.name)\n    setUsername(username || blog.user?.username)\n    likeBlog(id, updatedBlog)\n  }\n\n  const handleDelete = () => {\n    const { id } = blog\n\n    deleteBlog(id)\n  }\n\n  return (\n  <div>\n    {blog.title} {blog.author} {blog.url} {blog.likes} <button onClick={handleDelete}>Like</button> <button onClick={deleteBlog}>Delete</button>\n  </div>  \n  )\n}\n\n    \n\n\n// const Blog = ({blog, notificationCallback, setBlogs, blogs}) => {\n  \n\n//   const handleLike = async () => {\n//     // try {\n//       const updatedContents = { author : blog.author, url : blog.url, user : blog.user.id, likes : blog.likes + 1 }\n//       const response = await blogService.updateBlog({id : blog.id, updatedContents})\n//       let blogList = blogs.map(b => b.id !== updatedContents.id ? b : updatedContents);\n//       setBlogs(blogList);\n//       if (response.error) {\n//         notificationCallback\n//         (\"response-error \" + response.error)\n//         setTimeout(() => {\n//           notificationCallback(null)\n//         }, 5000)\n//       } else {\n//         notificationCallback(`Liked ${blog.title} by ${blog.author}!` )\n//         setTimeout(() => {\n//           notificationCallback(null)\n//         }, 5000)\n//       }\n//     // } catch (exception) {\n//     //   notificationCallback(\"expetion: \" + exception.message )\n//     //   setTimeout(() => {\n//     //     notificationCallback(null)\n//     //   }, 5000)\n//     // }\n//     // window.location.reload();\n//   }\n\n\n//   const deleteBlog = async () => {\n//     if (window.confirm(`Remove blog ${blog.title} by ${blog.author}?`)) {\n//       const response = await blogService.deleteBlog({ id : blog.id })\n//       if (response.error) {\n//         notificationCallback(\"response-error \" + response.error)\n//       } else {\n//         notificationCallback(`Deleted ${blog.title}`)\n//       }\n//     }\n//   }\n\n//   return (\n//   <div>\n//     {blog.title} {blog.author} {blog.url} {blog.likes} <button onClick={handleLike}>Like</button> <button onClick={deleteBlog}>Delete</button>\n//   </div>  \n//   )\n// }\n\nexport default Blog"]},"metadata":{},"sourceType":"module"}