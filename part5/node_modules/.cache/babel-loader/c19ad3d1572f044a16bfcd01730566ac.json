{"ast":null,"code":"var _jsxFileName = \"/home/rasmusniemi/full-stack-mooc-2020/part5/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Blog from './components/Blog';\nimport Notification from \"./components/Notification\";\nimport blogService from './services/blogs';\nimport loginService from './services/login';\nimport LoginForm from \"./components/LoginForm\";\nimport BlogForm from \"./components/BlogForm\";\nimport Togglable from './components/Togglable';\n\nconst App = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null);\n  const [notificationMessage, setNotificationMessage] = useState(null); // const [title, setTitle] = useState('')\n  // const [author, setAuthor] = useState('') \n  // const [url, setUrl] = useState('') \n\n  const [blogs, setBlogs] = useState([]);\n  const addBlogRef = React.createRef();\n  useEffect(() => {\n    blogService.getAll().then(blogs => setBlogs(blogs.sort((a, b) => a.likes > b.likes ? -1 : 1)));\n  }, []);\n  useEffect(() => {\n    const loggedInUserJSON = window.localStorage.getItem('loggedUser');\n\n    if (loggedInUserJSON) {\n      const user = JSON.parse(loggedInUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []);\n\n  const handleLogin = async event => {\n    event.preventDefault();\n\n    try {\n      const user = await loginService({\n        username,\n        password\n      });\n      console.log(user.id, \"user.id\");\n      window.localStorage.setItem('loggedUser', JSON.stringify(user));\n      blogService.setToken(user.token);\n      setUser(user);\n      setUsername('');\n      setPassword('');\n    } catch (exception) {\n      console.log(exception);\n      setNotificationMessage('wrong credentials');\n      setTimeout(() => {\n        setNotificationMessage(null);\n      }, 5000);\n    }\n  };\n\n  const handleLogout = async () => {\n    window.localStorage.clear();\n    setUser(null);\n  };\n\n  const addBlog = async (blogRef, setTitle, setAuthor, setUrl, title, author, url) => {\n    try {\n      await blogService.create({\n        title,\n        author,\n        url\n      });\n      blogRef.current.toggleVisibility();\n      setTitle('');\n      setAuthor('');\n      setUrl('');\n      setNotificationMessage(`New blog: ${title} ${author} created`);\n      blogService.getAll().then(blogs => setBlogs(blogs));\n      setTimeout(() => {\n        setNotificationMessage(null);\n      }, 5000);\n    } catch (exception) {\n      setNotificationMessage(\"Invalid syntax\");\n      setTimeout(() => {\n        setNotificationMessage(null);\n      }, 5000);\n    }\n  };\n\n  const blogAddForm = () => {\n    return /*#__PURE__*/React.createElement(Togglable, {\n      buttonText: \"Add Blog\",\n      ref: addBlogRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(BlogForm // handleBlogChange = {handleBlogChange}\n    , {\n      setBlogs: setBlogs,\n      setNotificationMessage: setNotificationMessage,\n      blogRef: addBlogRef,\n      addBlog: addBlog // title = {title}  \n      // author = {author}\n      // url = {url}\n      // setTitle = {setTitle} \n      // setAuthor = {setAuthor}\n      // setUrl = {setUrl}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    }));\n  };\n\n  const likeBlog = async (id, blogObject) => {\n    try {\n      console.log(id, \"id in delete blog 1\");\n      const response = await blogService.updateBlog(id, blogObject);\n      console.log(response);\n      console.log(id, \"id in delete blog 2\");\n      const updatedBlog = { ...blogObject,\n        id\n      };\n      setBlogs(blogs.map(blog => blog.id !== id ? blog : updatedBlog));\n    } catch (err) {\n      console.error(err);\n      setNotificationMessage({\n        err\n      });\n      setTimeout(() => {\n        setNotificationMessage(null);\n      }, 5000);\n    }\n  };\n\n  const deleteBlog = async id => {\n    try {\n      const blog = blogs.filter(blog => blog.id === id);\n\n      if (window.confirm(`Remove ${blog[0].title} by ${blog[0].author}`)) {\n        // delete blog from db\n        const response = await blogService.deleteBlog(id);\n        console.log(response); // update state to reflect deletion in UI\n\n        setBlogs(blogs.filter(blog => blog.id !== id));\n      }\n    } catch (err) {\n      console.error(err);\n      setNotificationMessage({\n        err\n      });\n      setTimeout(() => {\n        setNotificationMessage(null);\n      }, 5000);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, \"Welcome to blog app\"), /*#__PURE__*/React.createElement(Notification, {\n    message: notificationMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }), user === null ? /*#__PURE__*/React.createElement(LoginForm, {\n    handleSubmit: handleLogin,\n    username: username,\n    password: password,\n    setUsername: setUsername,\n    setPassword: setPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleLogout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }, \" Log Out\")), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 11\n    }\n  }, \"blogs\"), blogAddForm(), blogs.sort((a, b) => b.likes - a.likes).map(blog => /*#__PURE__*/React.createElement(Blog, {\n    key: blog.id,\n    user: user,\n    blog: blog,\n    likeBlog: likeBlog,\n    deleteBlog: deleteBlog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }) // <Blog \n  // key={blog.id}\n  // user = { user } \n  // blog={blog}\n  // notificationCallback = {setNotificationMessage} \n  // blogs = {blogs}\n  // setBlogs = {setBlogs}\n  // />\n  )));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/rasmusniemi/full-stack-mooc-2020/part5/src/App.js"],"names":["React","useState","useEffect","Blog","Notification","blogService","loginService","LoginForm","BlogForm","Togglable","App","username","setUsername","password","setPassword","user","setUser","notificationMessage","setNotificationMessage","blogs","setBlogs","addBlogRef","createRef","getAll","then","sort","a","b","likes","loggedInUserJSON","window","localStorage","getItem","JSON","parse","setToken","token","handleLogin","event","preventDefault","console","log","id","setItem","stringify","exception","setTimeout","handleLogout","clear","addBlog","blogRef","setTitle","setAuthor","setUrl","title","author","url","create","current","toggleVisibility","blogAddForm","likeBlog","blogObject","response","updateBlog","updatedBlog","map","blog","err","error","deleteBlog","filter","confirm"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react'\nimport Blog from './components/Blog'\nimport Notification from \"./components/Notification\"\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport LoginForm from \"./components/LoginForm\"\nimport BlogForm from \"./components/BlogForm\"\n\nimport Togglable from './components/Togglable'\n\n\nconst App = () => {\n  const [username, setUsername] = useState('') \n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null) \n  const [notificationMessage, setNotificationMessage] = useState(null);\n\n  // const [title, setTitle] = useState('')\n  // const [author, setAuthor] = useState('') \n  // const [url, setUrl] = useState('') \n  \n  const [blogs, setBlogs] = useState([])\n\n  const addBlogRef = React.createRef();\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs(blogs.sort((a,b) => a.likes > b.likes ? -1 : 1))\n    )  \n  }, [])\n\n  useEffect(() => {\n    const loggedInUserJSON = window.localStorage.getItem('loggedUser');\n    if (loggedInUserJSON) {\n      const user = JSON.parse(loggedInUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []);\n  \n  const handleLogin = async (event) => {\n    event.preventDefault();\n    \n    try {\n      const user = await loginService({\n        username, password\n      });\n      console.log(user.id, \"user.id\")\n      window.localStorage.setItem('loggedUser', JSON.stringify(user));\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      console.log(exception)\n      setNotificationMessage('wrong credentials')\n      setTimeout(() => {\n        setNotificationMessage(null)\n      }, 5000)\n    }\n  }\n  \n\n  const handleLogout = async () => {\n    window.localStorage.clear()\n    setUser(null);\n  }\n\n  \n  const addBlog = async (blogRef, setTitle, setAuthor, setUrl, title, author, url) => {\n    try {\n\n        await blogService\n            .create( { title, author, url })\n\n        blogRef.current.toggleVisibility()\n        setTitle('')\n        setAuthor('')\n        setUrl('')\n\n        setNotificationMessage(`New blog: ${title} ${author} created`)\n\n        blogService.getAll().then((blogs) => setBlogs(blogs))\n        setTimeout(() => {\n            setNotificationMessage(null)\n        }, 5000)\n    } catch (exception) {\n        setNotificationMessage(\"Invalid syntax\")\n      setTimeout(() => {\n        setNotificationMessage(null)\n      }, 5000)\n    }\n  }\n  \n  const blogAddForm  = () => {\n    return (\n    <Togglable buttonText='Add Blog' ref={addBlogRef} >\n      <BlogForm\n        // handleBlogChange = {handleBlogChange}\n        setBlogs = {setBlogs}\n        setNotificationMessage = {setNotificationMessage}\n        blogRef = {addBlogRef}\n        addBlog = {addBlog}\n        // title = {title}  \n        // author = {author}\n        // url = {url}\n        // setTitle = {setTitle} \n        // setAuthor = {setAuthor}\n        // setUrl = {setUrl}\n        />\n      </Togglable> \n    )  \n}\n\n  const likeBlog = async (id, blogObject) => {\n    \n    try {  \n      \n      console.log(id, \"id in delete blog 1\")\n      const response =  await blogService.updateBlog(id, blogObject)\n     \n      console.log(response)\n      console.log(id, \"id in delete blog 2\")\n      \n      const updatedBlog = {\n        ...blogObject,\n        id,\n      }\n\n      setBlogs(blogs.map((blog) => (blog.id !== id ? blog : updatedBlog)))\n      \n    } catch (err) {\n      console.error(err)\n      setNotificationMessage({err})\n\n      setTimeout(() => {\n        setNotificationMessage(null)\n      }, 5000)\n    }\n  }\n\n  const deleteBlog = async (id) => {\n    try {\n      const blog = blogs.filter((blog) => blog.id === id)\n\n      if (window.confirm(`Remove ${blog[0].title} by ${blog[0].author}`)) {\n        // delete blog from db\n        const response = await blogService.deleteBlog(id)\n        \n        console.log(response)\n        // update state to reflect deletion in UI\n        setBlogs(blogs.filter((blog) => blog.id !== id))\n      }\n    } catch (err) {\n      console.error(err)\n      setNotificationMessage({err})\n      setTimeout(() => {\n        setNotificationMessage(null)\n      }, 5000)\n    }\n  }\n\n\n    return (\n      <div>\n        <h2>Welcome to blog app</h2>\n        <Notification message={notificationMessage} />\n        {user === null\n          ? <LoginForm\n            handleSubmit={handleLogin}\n            username={username}\n            password={password}\n            setUsername={setUsername}\n            setPassword={setPassword}\n          />\n          : <div>\n          <p>\n          <button onClick={handleLogout}> Log Out</button> \n          </p>\n          <h2>blogs</h2>\n          {blogAddForm()}\n          { blogs\n            .sort((a, b) => b.likes - a.likes)\n            .map((blog) => (\n            <Blog  \n            key={blog.id}\n            user={user}\n            blog={blog}\n            likeBlog={likeBlog}\n            deleteBlog={deleteBlog}\n            />\n            // <Blog \n            // key={blog.id}\n            // user = { user } \n            // blog={blog}\n            // notificationCallback = {setNotificationMessage} \n            // blogs = {blogs}\n            // setBlogs = {setBlogs}\n            // />\n          ))}\n          </div>}        \n         </div>\n    )\n  }\n\nexport default App"]},"metadata":{},"sourceType":"module"}