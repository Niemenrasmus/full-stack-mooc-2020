{"ast":null,"code":"var _jsxFileName = \"/home/rasmusniemi/full-stack-mooc-2020/part5/src/components/Blog.js\";\nimport React, { useCallback } from 'react';\nimport blogService from '../services/blogs';\n\nconst Blog = _ref => {\n  let {\n    blog,\n    notificationCallback,\n    setBlogs,\n    blogs\n  } = _ref;\n  const handleLike = useCallback(async (event, id) => {\n    const blogToUpdate = { ...blog,\n      likes: blog.likes + 1,\n      user: blog.user.id\n    };\n\n    try {\n      const returnedBlog = await blogs.update(id, blogToUpdate);\n      setBlogs(blogs.map(blog => blog.id !== id ? blog : returnedBlog));\n    } catch (exception) {\n      notificationCallback(exception);\n    }\n  }); // const handleLike = async () => {\n  //   try {\n  //     const updatedContents = { author : blog.author, url : blog.url, user : blog.user.id, likes : blog.likes + 1 }\n  //     const response = await blogService.updateBlog({ id : blog.id, updatedContents })\n  //     let blogList = blogs.map(b => b.id !== updatedContents.id ? b : updatedContents);\n  //     setBlogs(blogList);\n  //     if (response.error) {\n  //       notificationCallback\n  //       (\"response-error \" + response.error)\n  //       setTimeout(() => {\n  //         notificationCallback(null)\n  //       }, 5000)\n  //     } else {\n  //       notificationCallback(`Liked ${blog.title} by ${blog.author}!` )\n  //       setTimeout(() => {\n  //         notificationCallback(null)\n  //       }, 5000)\n  //     }\n  //   } catch (exception) {\n  //     notificationCallback(\"expetion: \" + exception.message )\n  //     setTimeout(() => {\n  //       notificationCallback(null)\n  //     }, 5000)\n  //   }\n  //   // window.location.reload();\n  // }\n\n  const deleteBlog = async () => {\n    if (window.confirm(`Remove blog ${blog.title} by ${blog.author}?`)) {\n      const response = await blogService.deleteBlog({\n        id: blog.id\n      });\n\n      if (response.error) {\n        notificationCallback(\"response-error \" + response.error);\n      } else {\n        notificationCallback(`Deleted ${blog.title}`);\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 3\n    }\n  }, blog.title, \" \", blog.author, \" \", blog.url, \" \", blog.likes, \" \", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleLike,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 56\n    }\n  }, \"Like\"), \" \", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: deleteBlog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 99\n    }\n  }, \"Delete\"));\n};\n\nexport default Blog;","map":{"version":3,"sources":["/home/rasmusniemi/full-stack-mooc-2020/part5/src/components/Blog.js"],"names":["React","useCallback","blogService","Blog","blog","notificationCallback","setBlogs","blogs","handleLike","event","id","blogToUpdate","likes","user","returnedBlog","update","map","exception","deleteBlog","window","confirm","title","author","response","error","url"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,WAAf,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,mBAAxB;;AAEA,MAAMC,IAAI,GAAG,QAAmD;AAAA,MAAlD;AAACC,IAAAA,IAAD;AAAOC,IAAAA,oBAAP;AAA6BC,IAAAA,QAA7B;AAAuCC,IAAAA;AAAvC,GAAkD;AAG9D,QAAMC,UAAU,GAAGP,WAAW,CAC5B,OAAOQ,KAAP,EAAcC,EAAd,KAAqB;AACnB,UAAMC,YAAY,GAAG,EACnB,GAAGP,IADgB;AAEnBQ,MAAAA,KAAK,EAAER,IAAI,CAACQ,KAAL,GAAa,CAFD;AAGnBC,MAAAA,IAAI,EAAET,IAAI,CAACS,IAAL,CAAUH;AAHG,KAArB;;AAMA,QAAI;AACF,YAAMI,YAAY,GAAG,MAAMP,KAAK,CAACQ,MAAN,CAAaL,EAAb,EAAiBC,YAAjB,CAA3B;AACAL,MAAAA,QAAQ,CAACC,KAAK,CAACS,GAAN,CAAWZ,IAAD,IAAWA,IAAI,CAACM,EAAL,KAAYA,EAAZ,GAAiBN,IAAjB,GAAwBU,YAA7C,CAAD,CAAR;AACD,KAHD,CAGE,OAAOG,SAAP,EAAkB;AAClBZ,MAAAA,oBAAoB,CAACY,SAAD,CAApB;AACD;AACF,GAd2B,CAA9B,CAH8D,CAmB9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMC,UAAU,GAAG,YAAY;AAC7B,QAAIC,MAAM,CAACC,OAAP,CAAgB,eAAchB,IAAI,CAACiB,KAAM,OAAMjB,IAAI,CAACkB,MAAO,GAA3D,CAAJ,EAAoE;AAClE,YAAMC,QAAQ,GAAG,MAAMrB,WAAW,CAACgB,UAAZ,CAAuB;AAAER,QAAAA,EAAE,EAAGN,IAAI,CAACM;AAAZ,OAAvB,CAAvB;;AACA,UAAIa,QAAQ,CAACC,KAAb,EAAoB;AAClBnB,QAAAA,oBAAoB,CAAC,oBAAoBkB,QAAQ,CAACC,KAA9B,CAApB;AACD,OAFD,MAEO;AACLnB,QAAAA,oBAAoB,CAAE,WAAUD,IAAI,CAACiB,KAAM,EAAvB,CAApB;AACD;AACF;AACF,GATD;;AAWA,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGjB,IAAI,CAACiB,KADR,OACgBjB,IAAI,CAACkB,MADrB,OAC8BlB,IAAI,CAACqB,GADnC,OACyCrB,IAAI,CAACQ,KAD9C,oBACqD;AAAQ,IAAA,OAAO,EAAEJ,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADrD,oBACgG;AAAQ,IAAA,OAAO,EAAEU,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADhG,CADA;AAKD,CA9DD;;AAgEA,eAAef,IAAf","sourcesContent":["import React, {useCallback} from 'react'\nimport blogService from '../services/blogs'\n\nconst Blog = ({blog, notificationCallback, setBlogs, blogs}) => {\n  \n\n  const handleLike = useCallback(\n    async (event, id) => {\n      const blogToUpdate = {\n        ...blog,\n        likes: blog.likes + 1,\n        user: blog.user.id,\n      }\n      \n      try {\n        const returnedBlog = await blogs.update(id, blogToUpdate);\n        setBlogs(blogs.map((blog) => (blog.id !== id ? blog : returnedBlog)));\n      } catch (exception) {\n        notificationCallback(exception);\n      } \n    }\n  )\n  // const handleLike = async () => {\n  //   try {\n  //     const updatedContents = { author : blog.author, url : blog.url, user : blog.user.id, likes : blog.likes + 1 }\n  //     const response = await blogService.updateBlog({ id : blog.id, updatedContents })\n  //     let blogList = blogs.map(b => b.id !== updatedContents.id ? b : updatedContents);\n  //     setBlogs(blogList);\n  //     if (response.error) {\n  //       notificationCallback\n  //       (\"response-error \" + response.error)\n  //       setTimeout(() => {\n  //         notificationCallback(null)\n  //       }, 5000)\n  //     } else {\n  //       notificationCallback(`Liked ${blog.title} by ${blog.author}!` )\n  //       setTimeout(() => {\n  //         notificationCallback(null)\n  //       }, 5000)\n  //     }\n  //   } catch (exception) {\n  //     notificationCallback(\"expetion: \" + exception.message )\n  //     setTimeout(() => {\n  //       notificationCallback(null)\n  //     }, 5000)\n  //   }\n  //   // window.location.reload();\n  // }\n\n  const deleteBlog = async () => {\n    if (window.confirm(`Remove blog ${blog.title} by ${blog.author}?`)) {\n      const response = await blogService.deleteBlog({ id : blog.id })\n      if (response.error) {\n        notificationCallback(\"response-error \" + response.error)\n      } else {\n        notificationCallback(`Deleted ${blog.title}`)\n      }\n    }\n  }\n\n  return (\n  <div>\n    {blog.title} {blog.author} {blog.url} {blog.likes} <button onClick={handleLike}>Like</button> <button onClick={deleteBlog}>Delete</button>\n  </div>  \n  )\n}\n\nexport default Blog"]},"metadata":{},"sourceType":"module"}